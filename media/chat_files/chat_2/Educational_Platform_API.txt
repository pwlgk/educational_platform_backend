openapi: 3.0.3
info:
  title: Educational Platform API
  version: 1.0.0
  description: API для образовательной платформы
paths:
  /api/edu-core/curator/managed-groups/:
    get:
      operationId: edu_core_curator_managed_groups_list
      parameters:
      - in: query
        name: academic_year
        schema:
          type: integer
      - in: query
        name: curator
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentGroupList'
          description: ''
  /api/edu-core/curator/managed-groups/{group_pk}/performance/:
    get:
      operationId: edu_core_curator_managed_groups_performance_list
      parameters:
      - in: path
        name: group_pk
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupPerformanceList'
          description: ''
  /api/edu-core/curator/managed-groups/{id}/:
    get:
      operationId: edu_core_curator_managed_groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебная группа.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGroup'
          description: ''
    put:
      operationId: edu_core_curator_managed_groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебная группа.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentGroupRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGroup'
          description: ''
    patch:
      operationId: edu_core_curator_managed_groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебная группа.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentGroupRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGroup'
          description: ''
  /api/edu-core/journal-data/:
    get:
      operationId: edu_core_journal_data_retrieve
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/edu-core/management/academic-years/:
    get:
      operationId: edu_core_management_academic_years_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAcademicYearList'
          description: ''
    post:
      operationId: edu_core_management_academic_years_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademicYearRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcademicYearRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcademicYearRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicYear'
          description: ''
  /api/edu-core/management/academic-years/{id}/:
    get:
      operationId: edu_core_management_academic_years_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный год.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicYear'
          description: ''
    put:
      operationId: edu_core_management_academic_years_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный год.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademicYearRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcademicYearRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcademicYearRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicYear'
          description: ''
    patch:
      operationId: edu_core_management_academic_years_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный год.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAcademicYearRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAcademicYearRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAcademicYearRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicYear'
          description: ''
    delete:
      operationId: edu_core_management_academic_years_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный год.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/attendances/:
    get:
      operationId: edu_core_management_attendances_list
      parameters:
      - in: query
        name: journal_entry
        schema:
          type: integer
      - in: query
        name: journal_entry__lesson
        schema:
          type: integer
      - in: query
        name: journal_entry__lesson__start_time__date
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__start_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__start_time__date__lte
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          title: Статус посещаемости
          enum:
          - L
          - N
          - P
          - R
          - V
        description: |-
          * `P` - Присутствовал (П)
          * `V` - Отсутствовал по ув. причине (УП)
          * `N` - Отсутствовал по неув. причине (Н)
          * `L` - Опоздал (О)
          * `R` - Дистанционно (Д)
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - in: query
        name: student
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttendanceList'
          description: ''
    post:
      operationId: edu_core_management_attendances_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/edu-core/management/attendances/{id}/:
    get:
      operationId: edu_core_management_attendances_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    put:
      operationId: edu_core_management_attendances_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    patch:
      operationId: edu_core_management_attendances_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    delete:
      operationId: edu_core_management_attendances_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/attendances/batch-mark/:
    post:
      operationId: edu_core_management_attendances_batch_mark_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/edu-core/management/classrooms/:
    get:
      operationId: edu_core_management_classrooms_list
      parameters:
      - in: query
        name: capacity
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
          title: Тип аудитории
          enum:
          - ART
          - COMPUTER
          - LAB
          - LECTURE
          - LIBRARY
          - MEETING
          - OTHER
          - PRACTICE
          - SPORTS
        description: |-
          * `LECTURE` - Лекционная
          * `PRACTICE` - Практическая
          * `LAB` - Лаборатория
          * `COMPUTER` - Компьютерный класс
          * `SPORTS` - Спортивный зал
          * `ART` - Творческая мастерская
          * `LIBRARY` - Библиотека
          * `MEETING` - Переговорная/Зал собраний
          * `OTHER` - Другое
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClassroomList'
          description: ''
    post:
      operationId: edu_core_management_classrooms_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassroomRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClassroomRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClassroomRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classroom'
          description: ''
  /api/edu-core/management/classrooms/{id}/:
    get:
      operationId: edu_core_management_classrooms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this аудитория.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classroom'
          description: ''
    put:
      operationId: edu_core_management_classrooms_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this аудитория.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassroomRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClassroomRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClassroomRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classroom'
          description: ''
    patch:
      operationId: edu_core_management_classrooms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this аудитория.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClassroomRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClassroomRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClassroomRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classroom'
          description: ''
    delete:
      operationId: edu_core_management_classrooms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this аудитория.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/curricula/:
    get:
      operationId: edu_core_management_curricula_list
      parameters:
      - in: query
        name: academic_year
        schema:
          type: integer
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student_group
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCurriculumList'
          description: ''
    post:
      operationId: edu_core_management_curricula_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurriculumRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurriculumRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurriculumRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
          description: ''
  /api/edu-core/management/curricula/{curriculum_pk}/entries/:
    get:
      operationId: edu_core_management_curricula_entries_list
      parameters:
      - in: path
        name: curriculum_pk
        schema:
          type: integer
          title: Учебный план
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: study_period
        schema:
          type: integer
      - in: query
        name: subject
        schema:
          type: integer
      - in: query
        name: teacher
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCurriculumEntryList'
          description: ''
    post:
      operationId: edu_core_management_curricula_entries_create
      parameters:
      - in: path
        name: curriculum_pk
        schema:
          type: integer
          title: Учебный план
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurriculumEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurriculumEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurriculumEntryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumEntry'
          description: ''
  /api/edu-core/management/curricula/{curriculum_pk}/entries/{id}/:
    get:
      operationId: edu_core_management_curricula_entries_retrieve
      parameters:
      - in: path
        name: curriculum_pk
        schema:
          type: integer
          title: Учебный план
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись учебного плана.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumEntry'
          description: ''
    put:
      operationId: edu_core_management_curricula_entries_update
      parameters:
      - in: path
        name: curriculum_pk
        schema:
          type: integer
          title: Учебный план
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись учебного плана.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurriculumEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurriculumEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurriculumEntryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumEntry'
          description: ''
    patch:
      operationId: edu_core_management_curricula_entries_partial_update
      parameters:
      - in: path
        name: curriculum_pk
        schema:
          type: integer
          title: Учебный план
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись учебного плана.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCurriculumEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCurriculumEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCurriculumEntryRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumEntry'
          description: ''
    delete:
      operationId: edu_core_management_curricula_entries_destroy
      parameters:
      - in: path
        name: curriculum_pk
        schema:
          type: integer
          title: Учебный план
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись учебного плана.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/curricula/{id}/:
    get:
      operationId: edu_core_management_curricula_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный план.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
          description: ''
    put:
      operationId: edu_core_management_curricula_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный план.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurriculumRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurriculumRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurriculumRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
          description: ''
    patch:
      operationId: edu_core_management_curricula_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный план.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCurriculumRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCurriculumRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCurriculumRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
          description: ''
    delete:
      operationId: edu_core_management_curricula_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный план.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/export/journal/:
    get:
      operationId: edu_core_management_export_journal_retrieve
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/edu-core/management/grades/:
    get:
      operationId: edu_core_management_grades_list
      parameters:
      - in: query
        name: academic_year
        schema:
          type: integer
      - in: query
        name: date_given
        schema:
          type: string
          format: date
      - in: query
        name: date_given__gte
        schema:
          type: string
          format: date
      - in: query
        name: date_given__lte
        schema:
          type: string
          format: date
      - in: query
        name: grade_type
        schema:
          type: string
          title: Тип оценки
          enum:
          - EXAM
          - HOMEWORK_GRADE
          - LESSON_WORK
          - PERIOD_AVG
          - PERIOD_FINAL
          - PROJECT
          - QUIZ
          - TEST
          - YEAR_AVG
          - YEAR_FINAL
        description: |-
          * `LESSON_WORK` - Работа на занятии
          * `HOMEWORK_GRADE` - Оценка за ДЗ
          * `TEST` - Контрольная/Тест
          * `PROJECT` - Проект
          * `QUIZ` - Опрос/Летучка
          * `EXAM` - Экзамен/Зачет
          * `PERIOD_AVG` - Средняя за период (расчетная)
          * `PERIOD_FINAL` - Итог за период (выставленная)
          * `YEAR_AVG` - Средняя за год (расчетная)
          * `YEAR_FINAL` - Итог за год (выставленная)
      - in: query
        name: grade_type__in
        schema:
          type: array
          items:
            type: string
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - in: query
        name: homework_submission
        schema:
          type: integer
      - in: query
        name: lesson
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student
        schema:
          type: integer
      - in: query
        name: study_period
        schema:
          type: integer
      - in: query
        name: subject
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradeList'
          description: ''
    post:
      operationId: edu_core_management_grades_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /api/edu-core/management/grades/{id}/:
    get:
      operationId: edu_core_management_grades_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    put:
      operationId: edu_core_management_grades_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    patch:
      operationId: edu_core_management_grades_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    delete:
      operationId: edu_core_management_grades_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/homework/:
    get:
      operationId: edu_core_management_homework_list
      parameters:
      - in: query
        name: author
        schema:
          type: integer
        description: Фильтр по ID автора ДЗ
      - in: query
        name: due_date__exact
        schema:
          type: string
          format: date
      - in: query
        name: due_date__gte
        schema:
          type: string
          format: date
      - in: query
        name: due_date__lte
        schema:
          type: string
          format: date
      - in: query
        name: due_date_after
        schema:
          type: string
          format: date
        description: Фильтр по сроку сдачи (диапазон дат)
      - in: query
        name: due_date_before
        schema:
          type: string
          format: date
        description: Фильтр по сроку сдачи (диапазон дат)
      - in: query
        name: journal_entry
        schema:
          type: integer
        description: Фильтр по ID записи в журнале
      - in: query
        name: journal_entry__lesson
        schema:
          type: integer
        description: Фильтр по ID урока (связанного с ДЗ через запись в журнале)
      - in: query
        name: journal_entry__lesson__student_group
        schema:
          type: integer
        description: Фильтр по ID студенческой группы урока
      - in: query
        name: journal_entry__lesson__subject
        schema:
          type: integer
        description: Фильтр по ID предмета урока
      - in: query
        name: lesson
        schema:
          type: integer
        description: Фильтр по ID урока (связанного с ДЗ через запись в журнале)
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkList'
          description: ''
    post:
      operationId: edu_core_management_homework_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
  /api/edu-core/management/homework-attachments/:
    get:
      operationId: edu_core_management_homework_attachments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkAttachmentList'
          description: ''
    post:
      operationId: edu_core_management_homework_attachments_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
  /api/edu-core/management/homework-attachments/{id}/:
    get:
      operationId: edu_core_management_homework_attachments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
    put:
      operationId: edu_core_management_homework_attachments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
    patch:
      operationId: edu_core_management_homework_attachments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkAttachmentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
    delete:
      operationId: edu_core_management_homework_attachments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/homework-submissions/:
    get:
      operationId: edu_core_management_homework_submissions_list
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: query
        name: homework
        schema:
          type: integer
        description: Фильтр по ID домашнего задания
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student
        schema:
          type: integer
        description: Фильтр по ID студента
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkSubmissionList'
          description: ''
    post:
      operationId: edu_core_management_homework_submissions_create
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
  /api/edu-core/management/homework-submissions/{id}/:
    get:
      operationId: edu_core_management_homework_submissions_retrieve
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    put:
      operationId: edu_core_management_homework_submissions_update
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    patch:
      operationId: edu_core_management_homework_submissions_partial_update
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    delete:
      operationId: edu_core_management_homework_submissions_destroy
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/homework-submissions/{id}/grade/:
    post:
      operationId: edu_core_management_homework_submissions_grade_create
      description: Выставление или обновление оценки для сдачи домашнего задания.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /api/edu-core/management/homework-submissions/{submission_pk}/attachments/:
    get:
      operationId: edu_core_management_homework_submissions_attachments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubmissionAttachmentList'
          description: ''
    post:
      operationId: edu_core_management_homework_submissions_attachments_create
      parameters:
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
  /api/edu-core/management/homework-submissions/{submission_pk}/attachments/{id}/:
    get:
      operationId: edu_core_management_homework_submissions_attachments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    put:
      operationId: edu_core_management_homework_submissions_attachments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    patch:
      operationId: edu_core_management_homework_submissions_attachments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    delete:
      operationId: edu_core_management_homework_submissions_attachments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/homework/{homework_pk}/attachments/:
    get:
      operationId: edu_core_management_homework_attachments_list_2
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkAttachmentList'
          description: ''
    post:
      operationId: edu_core_management_homework_attachments_create_2
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
  /api/edu-core/management/homework/{homework_pk}/attachments/{id}/:
    get:
      operationId: edu_core_management_homework_attachments_retrieve_2
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
    put:
      operationId: edu_core_management_homework_attachments_update_2
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
    patch:
      operationId: edu_core_management_homework_attachments_partial_update_2
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkAttachmentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
    delete:
      operationId: edu_core_management_homework_attachments_destroy_2
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/homework/{homework_pk}/submissions/:
    get:
      operationId: edu_core_management_homework_submissions_list_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: query
        name: homework
        schema:
          type: integer
        description: Фильтр по ID домашнего задания
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student
        schema:
          type: integer
        description: Фильтр по ID студента
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkSubmissionList'
          description: ''
    post:
      operationId: edu_core_management_homework_submissions_create_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
  /api/edu-core/management/homework/{homework_pk}/submissions/{id}/:
    get:
      operationId: edu_core_management_homework_submissions_retrieve_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    put:
      operationId: edu_core_management_homework_submissions_update_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    patch:
      operationId: edu_core_management_homework_submissions_partial_update_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    delete:
      operationId: edu_core_management_homework_submissions_destroy_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/homework/{homework_pk}/submissions/{id}/grade/:
    post:
      operationId: edu_core_management_homework_submissions_grade_create_2
      description: Выставление или обновление оценки для сдачи домашнего задания.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /api/edu-core/management/homework/{id}/:
    get:
      operationId: edu_core_management_homework_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    put:
      operationId: edu_core_management_homework_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    patch:
      operationId: edu_core_management_homework_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    delete:
      operationId: edu_core_management_homework_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/import/{import_type}/:
    post:
      operationId: edu_core_management_import_create
      parameters:
      - in: path
        name: import_type
        schema:
          type: string
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/edu-core/management/journal-entries/:
    get:
      operationId: edu_core_management_journal_entries_list
      parameters:
      - in: query
        name: date_filled__date
        schema:
          type: string
          format: date
      - in: query
        name: date_filled__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: date_filled__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: lesson
        schema:
          type: integer
      - in: query
        name: lesson__student_group
        schema:
          type: integer
      - in: query
        name: lesson__study_period
        schema:
          type: integer
      - in: query
        name: lesson__study_period__academic_year
        schema:
          type: integer
      - in: query
        name: lesson__subject
        schema:
          type: integer
      - in: query
        name: lesson__teacher
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonJournalEntryList'
          description: ''
    post:
      operationId: edu_core_management_journal_entries_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
  /api/edu-core/management/journal-entries/{journal_entry_pk}/attendances/:
    get:
      operationId: edu_core_management_journal_entries_attendances_list
      parameters:
      - in: query
        name: journal_entry
        schema:
          type: integer
      - in: query
        name: journal_entry__lesson
        schema:
          type: integer
      - in: query
        name: journal_entry__lesson__start_time__date
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__start_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__start_time__date__lte
        schema:
          type: string
          format: date
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          title: Статус посещаемости
          enum:
          - L
          - N
          - P
          - R
          - V
        description: |-
          * `P` - Присутствовал (П)
          * `V` - Отсутствовал по ув. причине (УП)
          * `N` - Отсутствовал по неув. причине (Н)
          * `L` - Опоздал (О)
          * `R` - Дистанционно (Д)
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - in: query
        name: student
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttendanceList'
          description: ''
    post:
      operationId: edu_core_management_journal_entries_attendances_create
      parameters:
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/edu-core/management/journal-entries/{journal_entry_pk}/attendances/{id}/:
    get:
      operationId: edu_core_management_journal_entries_attendances_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    put:
      operationId: edu_core_management_journal_entries_attendances_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    patch:
      operationId: edu_core_management_journal_entries_attendances_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    delete:
      operationId: edu_core_management_journal_entries_attendances_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/journal-entries/{journal_entry_pk}/attendances/batch-mark/:
    post:
      operationId: edu_core_management_journal_entries_attendances_batch_mark_create
      parameters:
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/edu-core/management/journal-entries/{journal_entry_pk}/homework/:
    get:
      operationId: edu_core_management_journal_entries_homework_list
      parameters:
      - in: query
        name: author
        schema:
          type: integer
        description: Фильтр по ID автора ДЗ
      - in: query
        name: due_date__exact
        schema:
          type: string
          format: date
      - in: query
        name: due_date__gte
        schema:
          type: string
          format: date
      - in: query
        name: due_date__lte
        schema:
          type: string
          format: date
      - in: query
        name: due_date_after
        schema:
          type: string
          format: date
        description: Фильтр по сроку сдачи (диапазон дат)
      - in: query
        name: due_date_before
        schema:
          type: string
          format: date
        description: Фильтр по сроку сдачи (диапазон дат)
      - in: query
        name: journal_entry
        schema:
          type: integer
        description: Фильтр по ID записи в журнале
      - in: query
        name: journal_entry__lesson
        schema:
          type: integer
        description: Фильтр по ID урока (связанного с ДЗ через запись в журнале)
      - in: query
        name: journal_entry__lesson__student_group
        schema:
          type: integer
        description: Фильтр по ID студенческой группы урока
      - in: query
        name: journal_entry__lesson__subject
        schema:
          type: integer
        description: Фильтр по ID предмета урока
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      - in: query
        name: lesson
        schema:
          type: integer
        description: Фильтр по ID урока (связанного с ДЗ через запись в журнале)
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkList'
          description: ''
    post:
      operationId: edu_core_management_journal_entries_homework_create
      parameters:
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
  /api/edu-core/management/journal-entries/{journal_entry_pk}/homework/{id}/:
    get:
      operationId: edu_core_management_journal_entries_homework_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    put:
      operationId: edu_core_management_journal_entries_homework_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    patch:
      operationId: edu_core_management_journal_entries_homework_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    delete:
      operationId: edu_core_management_journal_entries_homework_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/journal-entries/{id}/:
    get:
      operationId: edu_core_management_journal_entries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    put:
      operationId: edu_core_management_journal_entries_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    patch:
      operationId: edu_core_management_journal_entries_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    delete:
      operationId: edu_core_management_journal_entries_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/lessons/:
    get:
      operationId: edu_core_management_lessons_list
      description: |-
        ViewSet для управления Занятиями (Lessons).
        Предоставляет CRUD для админов/учителей и кастомный эндпоинт 'my-schedule'
        для получения персонального расписания студентов, учителей и родителей.
      parameters:
      - in: query
        name: classroom
        schema:
          type: integer
      - in: query
        name: end_time__date
        schema:
          type: string
          format: date
      - in: query
        name: end_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: end_time__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: lesson_type
        schema:
          type: string
          title: Тип занятия
          enum:
          - CONSULTATION
          - EVENT
          - EXAM
          - LAB
          - LECTURE
          - OTHER
          - PRACTICE
          - SEMINAR
        description: |-
          * `LECTURE` - Лекция
          * `PRACTICE` - Практическое занятие
          * `LAB` - Лабораторная работа
          * `SEMINAR` - Семинар
          * `CONSULTATION` - Консультация
          * `EXAM` - Экзамен/Зачет
          * `EVENT` - Мероприятие/Событие
          * `OTHER` - Другое
      - in: query
        name: lesson_type__in
        schema:
          type: array
          items:
            type: string
            title: Тип занятия
            enum:
            - CONSULTATION
            - EVENT
            - EXAM
            - LAB
            - LECTURE
            - OTHER
            - PRACTICE
            - SEMINAR
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_time__date
        schema:
          type: string
          format: date
      - in: query
        name: start_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: start_time__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: student_group
        schema:
          type: integer
      - in: query
        name: study_period
        schema:
          type: integer
      - in: query
        name: subject
        schema:
          type: integer
      - in: query
        name: teacher
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonListList'
          description: ''
    post:
      operationId: edu_core_management_lessons_create
      description: |-
        ViewSet для управления Занятиями (Lessons).
        Предоставляет CRUD для админов/учителей и кастомный эндпоинт 'my-schedule'
        для получения персонального расписания студентов, учителей и родителей.
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
  /api/edu-core/management/lessons/{lesson_pk}/attendances/:
    get:
      operationId: edu_core_management_lessons_attendances_list
      parameters:
      - in: query
        name: journal_entry
        schema:
          type: integer
      - in: query
        name: journal_entry__lesson
        schema:
          type: integer
      - in: query
        name: journal_entry__lesson__start_time__date
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__start_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__start_time__date__lte
        schema:
          type: string
          format: date
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          title: Статус посещаемости
          enum:
          - L
          - N
          - P
          - R
          - V
        description: |-
          * `P` - Присутствовал (П)
          * `V` - Отсутствовал по ув. причине (УП)
          * `N` - Отсутствовал по неув. причине (Н)
          * `L` - Опоздал (О)
          * `R` - Дистанционно (Д)
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - in: query
        name: student
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttendanceList'
          description: ''
    post:
      operationId: edu_core_management_lessons_attendances_create
      parameters:
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/edu-core/management/lessons/{lesson_pk}/attendances/{id}/:
    get:
      operationId: edu_core_management_lessons_attendances_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    put:
      operationId: edu_core_management_lessons_attendances_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    patch:
      operationId: edu_core_management_lessons_attendances_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    delete:
      operationId: edu_core_management_lessons_attendances_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/lessons/{lesson_pk}/attendances/batch-mark/:
    post:
      operationId: edu_core_management_lessons_attendances_batch_mark_create
      parameters:
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/edu-core/management/lessons/{lesson_pk}/grades/:
    get:
      operationId: edu_core_management_lessons_grades_list
      parameters:
      - in: query
        name: academic_year
        schema:
          type: integer
      - in: query
        name: date_given
        schema:
          type: string
          format: date
      - in: query
        name: date_given__gte
        schema:
          type: string
          format: date
      - in: query
        name: date_given__lte
        schema:
          type: string
          format: date
      - in: query
        name: grade_type
        schema:
          type: string
          title: Тип оценки
          enum:
          - EXAM
          - HOMEWORK_GRADE
          - LESSON_WORK
          - PERIOD_AVG
          - PERIOD_FINAL
          - PROJECT
          - QUIZ
          - TEST
          - YEAR_AVG
          - YEAR_FINAL
        description: |-
          * `LESSON_WORK` - Работа на занятии
          * `HOMEWORK_GRADE` - Оценка за ДЗ
          * `TEST` - Контрольная/Тест
          * `PROJECT` - Проект
          * `QUIZ` - Опрос/Летучка
          * `EXAM` - Экзамен/Зачет
          * `PERIOD_AVG` - Средняя за период (расчетная)
          * `PERIOD_FINAL` - Итог за период (выставленная)
          * `YEAR_AVG` - Средняя за год (расчетная)
          * `YEAR_FINAL` - Итог за год (выставленная)
      - in: query
        name: grade_type__in
        schema:
          type: array
          items:
            type: string
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - in: query
        name: homework_submission
        schema:
          type: integer
      - in: query
        name: lesson
        schema:
          type: integer
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student
        schema:
          type: integer
      - in: query
        name: study_period
        schema:
          type: integer
      - in: query
        name: subject
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradeList'
          description: ''
    post:
      operationId: edu_core_management_lessons_grades_create
      parameters:
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /api/edu-core/management/lessons/{lesson_pk}/grades/{id}/:
    get:
      operationId: edu_core_management_lessons_grades_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    put:
      operationId: edu_core_management_lessons_grades_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    patch:
      operationId: edu_core_management_lessons_grades_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    delete:
      operationId: edu_core_management_lessons_grades_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/lessons/{lesson_pk}/journal/:
    get:
      operationId: edu_core_management_lessons_journal_list
      parameters:
      - in: query
        name: date_filled__date
        schema:
          type: string
          format: date
      - in: query
        name: date_filled__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: date_filled__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: lesson
        schema:
          type: integer
      - in: query
        name: lesson__student_group
        schema:
          type: integer
      - in: query
        name: lesson__study_period
        schema:
          type: integer
      - in: query
        name: lesson__study_period__academic_year
        schema:
          type: integer
      - in: query
        name: lesson__subject
        schema:
          type: integer
      - in: query
        name: lesson__teacher
        schema:
          type: integer
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonJournalEntryList'
          description: ''
    post:
      operationId: edu_core_management_lessons_journal_create
      parameters:
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
  /api/edu-core/management/lessons/{lesson_pk}/journal/{id}/:
    get:
      operationId: edu_core_management_lessons_journal_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    put:
      operationId: edu_core_management_lessons_journal_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    patch:
      operationId: edu_core_management_lessons_journal_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    delete:
      operationId: edu_core_management_lessons_journal_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/lessons/{id}/:
    get:
      operationId: edu_core_management_lessons_retrieve
      description: |-
        ViewSet для управления Занятиями (Lessons).
        Предоставляет CRUD для админов/учителей и кастомный эндпоинт 'my-schedule'
        для получения персонального расписания студентов, учителей и родителей.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this занятие.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
    put:
      operationId: edu_core_management_lessons_update
      description: |-
        ViewSet для управления Занятиями (Lessons).
        Предоставляет CRUD для админов/учителей и кастомный эндпоинт 'my-schedule'
        для получения персонального расписания студентов, учителей и родителей.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this занятие.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
    patch:
      operationId: edu_core_management_lessons_partial_update
      description: |-
        ViewSet для управления Занятиями (Lessons).
        Предоставляет CRUD для админов/учителей и кастомный эндпоинт 'my-schedule'
        для получения персонального расписания студентов, учителей и родителей.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this занятие.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLessonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLessonRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLessonRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
    delete:
      operationId: edu_core_management_lessons_destroy
      description: |-
        ViewSet для управления Занятиями (Lessons).
        Предоставляет CRUD для админов/учителей и кастомный эндпоинт 'my-schedule'
        для получения персонального расписания студентов, учителей и родителей.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this занятие.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/lessons/my-schedule/:
    get:
      operationId: edu_core_management_lessons_my_schedule_retrieve
      description: |-
        Возвращает персонализированное расписание для текущего пользователя.
        Фильтры (включая даты) применяются через DjangoFilterBackend с использованием self.filterset_class.
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonList'
          description: ''
  /api/edu-core/management/stats/group-performance/:
    get:
      operationId: edu_core_management_stats_group_performance_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupPerformanceList'
          description: ''
  /api/edu-core/management/stats/teacher-load/:
    get:
      operationId: edu_core_management_stats_teacher_load_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeacherLoadList'
          description: ''
  /api/edu-core/management/stats/teacher-subject-performance/:
    get:
      operationId: edu_core_management_stats_teacher_subject_performance_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeacherSubjectPerformanceList'
          description: ''
  /api/edu-core/management/student-groups/:
    get:
      operationId: edu_core_management_student_groups_list
      parameters:
      - in: query
        name: academic_year
        schema:
          type: integer
      - in: query
        name: curator
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentGroupList'
          description: ''
    post:
      operationId: edu_core_management_student_groups_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentGroupRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGroup'
          description: ''
  /api/edu-core/management/student-groups/{id}/:
    get:
      operationId: edu_core_management_student_groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебная группа.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGroup'
          description: ''
    put:
      operationId: edu_core_management_student_groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебная группа.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentGroupRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGroup'
          description: ''
    patch:
      operationId: edu_core_management_student_groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебная группа.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentGroupRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGroup'
          description: ''
    delete:
      operationId: edu_core_management_student_groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебная группа.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/study-periods/:
    get:
      operationId: edu_core_management_study_periods_list
      parameters:
      - in: query
        name: academic_year
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudyPeriodList'
          description: ''
    post:
      operationId: edu_core_management_study_periods_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyPeriodRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudyPeriodRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudyPeriodRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyPeriod'
          description: ''
  /api/edu-core/management/study-periods/{id}/:
    get:
      operationId: edu_core_management_study_periods_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный период.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyPeriod'
          description: ''
    put:
      operationId: edu_core_management_study_periods_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный период.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyPeriodRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudyPeriodRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudyPeriodRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyPeriod'
          description: ''
    patch:
      operationId: edu_core_management_study_periods_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный период.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudyPeriodRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudyPeriodRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudyPeriodRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyPeriod'
          description: ''
    delete:
      operationId: edu_core_management_study_periods_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный период.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/subject-materials/:
    get:
      operationId: edu_core_management_subject_materials_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student_group
        schema:
          type: integer
      - in: query
        name: subject
        schema:
          type: integer
      - in: query
        name: uploaded_by
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubjectMaterialList'
          description: ''
    post:
      operationId: edu_core_management_subject_materials_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectMaterial'
          description: ''
  /api/edu-core/management/subject-materials/{id}/:
    get:
      operationId: edu_core_management_subject_materials_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный материал.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectMaterial'
          description: ''
    put:
      operationId: edu_core_management_subject_materials_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный материал.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectMaterial'
          description: ''
    patch:
      operationId: edu_core_management_subject_materials_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный материал.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubjectMaterialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubjectMaterialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubjectMaterialRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectMaterial'
          description: ''
    delete:
      operationId: edu_core_management_subject_materials_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный материал.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/subject-types/:
    get:
      operationId: edu_core_management_subject_types_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubjectTypeList'
          description: ''
    post:
      operationId: edu_core_management_subject_types_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubjectTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubjectTypeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectType'
          description: ''
  /api/edu-core/management/subject-types/{id}/:
    get:
      operationId: edu_core_management_subject_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this тип предмета.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectType'
          description: ''
    put:
      operationId: edu_core_management_subject_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this тип предмета.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubjectTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubjectTypeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectType'
          description: ''
    patch:
      operationId: edu_core_management_subject_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this тип предмета.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubjectTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubjectTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubjectTypeRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectType'
          description: ''
    delete:
      operationId: edu_core_management_subject_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this тип предмета.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/subjects/:
    get:
      operationId: edu_core_management_subjects_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: subject_type
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubjectList'
          description: ''
    post:
      operationId: edu_core_management_subjects_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
  /api/edu-core/management/subjects/{id}/:
    get:
      operationId: edu_core_management_subjects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this предмет.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    put:
      operationId: edu_core_management_subjects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this предмет.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubjectRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    patch:
      operationId: edu_core_management_subjects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this предмет.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubjectRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    delete:
      operationId: edu_core_management_subjects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this предмет.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/management/submission-attachments/:
    get:
      operationId: edu_core_management_submission_attachments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubmissionAttachmentList'
          description: ''
    post:
      operationId: edu_core_management_submission_attachments_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
  /api/edu-core/management/submission-attachments/{id}/:
    get:
      operationId: edu_core_management_submission_attachments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    put:
      operationId: edu_core_management_submission_attachments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    patch:
      operationId: edu_core_management_submission_attachments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    delete:
      operationId: edu_core_management_submission_attachments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/parent/child-attendance/:
    get:
      operationId: edu_core_parent_child_attendance_list
      parameters:
      - in: query
        name: journal_entry__lesson__start_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__start_time__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__subject
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          title: Статус посещаемости
          enum:
          - L
          - N
          - P
          - R
          - V
        description: |-
          * `P` - Присутствовал (П)
          * `V` - Отсутствовал по ув. причине (УП)
          * `N` - Отсутствовал по неув. причине (Н)
          * `L` - Опоздал (О)
          * `R` - Дистанционно (Д)
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMyAttendanceList'
          description: ''
  /api/edu-core/parent/child-grades/:
    get:
      operationId: edu_core_parent_child_grades_list
      parameters:
      - in: query
        name: academic_year
        schema:
          type: integer
      - in: query
        name: date_given__gte
        schema:
          type: string
          format: date
      - in: query
        name: date_given__lte
        schema:
          type: string
          format: date
      - in: query
        name: grade_type
        schema:
          type: string
          title: Тип оценки
          enum:
          - EXAM
          - HOMEWORK_GRADE
          - LESSON_WORK
          - PERIOD_AVG
          - PERIOD_FINAL
          - PROJECT
          - QUIZ
          - TEST
          - YEAR_AVG
          - YEAR_FINAL
        description: |-
          * `LESSON_WORK` - Работа на занятии
          * `HOMEWORK_GRADE` - Оценка за ДЗ
          * `TEST` - Контрольная/Тест
          * `PROJECT` - Проект
          * `QUIZ` - Опрос/Летучка
          * `EXAM` - Экзамен/Зачет
          * `PERIOD_AVG` - Средняя за период (расчетная)
          * `PERIOD_FINAL` - Итог за период (выставленная)
          * `YEAR_AVG` - Средняя за год (расчетная)
          * `YEAR_FINAL` - Итог за год (выставленная)
      - in: query
        name: grade_type__in
        schema:
          type: array
          items:
            type: string
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: study_period
        schema:
          type: integer
      - in: query
        name: subject
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMyGradeList'
          description: ''
  /api/edu-core/parent/child-homework/:
    get:
      operationId: edu_core_parent_child_homework_list
      parameters:
      - in: query
        name: due_date
        schema:
          type: string
          format: date-time
      - in: query
        name: due_date__date
        schema:
          type: string
          format: date
      - in: query
        name: due_date__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: due_date__isnull
        schema:
          type: boolean
      - in: query
        name: due_date__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: journal_entry__lesson__subject
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMyHomeworkList'
          description: ''
  /api/edu-core/parent/child-schedule/:
    get:
      operationId: edu_core_parent_child_schedule_list
      parameters:
      - in: query
        name: end_time
        schema:
          type: string
          format: date-time
      - in: query
        name: end_time__date
        schema:
          type: string
          format: date
      - in: query
        name: end_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: end_time__date__lte
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_time
        schema:
          type: string
          format: date-time
      - in: query
        name: start_time__date
        schema:
          type: string
          format: date
      - in: query
        name: start_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: start_time__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: start_time__day
        schema:
          type: number
      - in: query
        name: start_time__month
        schema:
          type: number
      - in: query
        name: start_time__year
        schema:
          type: number
      - in: query
        name: subject
        schema:
          type: integer
      - in: query
        name: teacher
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonListList'
          description: ''
  /api/edu-core/student/attendance/:
    get:
      operationId: edu_core_student_attendance_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMyAttendanceList'
          description: ''
  /api/edu-core/student/grades/:
    get:
      operationId: edu_core_student_grades_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMyGradeList'
          description: ''
  /api/edu-core/student/homework/:
    get:
      operationId: edu_core_student_homework_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMyHomeworkList'
          description: ''
  /api/edu-core/student/homework-submissions/:
    get:
      operationId: edu_core_student_homework_submissions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentHomeworkSubmissionList'
          description: ''
    post:
      operationId: edu_core_student_homework_submissions_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentHomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentHomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentHomeworkSubmissionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentHomeworkSubmission'
          description: ''
  /api/edu-core/student/homework-submissions/{id}/:
    get:
      operationId: edu_core_student_homework_submissions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentHomeworkSubmission'
          description: ''
    put:
      operationId: edu_core_student_homework_submissions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentHomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentHomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentHomeworkSubmissionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentHomeworkSubmission'
          description: ''
    patch:
      operationId: edu_core_student_homework_submissions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentHomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentHomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentHomeworkSubmissionRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentHomeworkSubmission'
          description: ''
    delete:
      operationId: edu_core_student_homework_submissions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/student/homework-submissions/{submission_pk}/attachments/:
    get:
      operationId: edu_core_student_homework_submissions_attachments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubmissionAttachmentList'
          description: ''
    post:
      operationId: edu_core_student_homework_submissions_attachments_create
      parameters:
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
  /api/edu-core/student/homework-submissions/{submission_pk}/attachments/{id}/:
    get:
      operationId: edu_core_student_homework_submissions_attachments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    put:
      operationId: edu_core_student_homework_submissions_attachments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    patch:
      operationId: edu_core_student_homework_submissions_attachments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    delete:
      operationId: edu_core_student_homework_submissions_attachments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/student/homework/{homework_id}/:
    get:
      operationId: edu_core_student_homework_retrieve
      parameters:
      - in: path
        name: homework_id
        schema:
          type: integer
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyHomework'
          description: ''
  /api/edu-core/student/schedule/:
    get:
      operationId: edu_core_student_schedule_list
      description: |-
        Возвращает список занятий (расписание) для аутентифицированного студента.
        Поддерживает фильтрацию по диапазону дат, ID предмета и ID преподавателя.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonListList'
          description: ''
  /api/edu-core/teacher/attendances/:
    get:
      operationId: edu_core_teacher_attendances_list
      parameters:
      - in: query
        name: journal_entry
        schema:
          type: integer
      - in: query
        name: journal_entry__lesson
        schema:
          type: integer
      - in: query
        name: journal_entry__lesson__start_time__date
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__start_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__start_time__date__lte
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          title: Статус посещаемости
          enum:
          - L
          - N
          - P
          - R
          - V
        description: |-
          * `P` - Присутствовал (П)
          * `V` - Отсутствовал по ув. причине (УП)
          * `N` - Отсутствовал по неув. причине (Н)
          * `L` - Опоздал (О)
          * `R` - Дистанционно (Д)
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - in: query
        name: student
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttendanceList'
          description: ''
    post:
      operationId: edu_core_teacher_attendances_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/edu-core/teacher/attendances/{id}/:
    get:
      operationId: edu_core_teacher_attendances_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    put:
      operationId: edu_core_teacher_attendances_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    patch:
      operationId: edu_core_teacher_attendances_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    delete:
      operationId: edu_core_teacher_attendances_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/attendances/batch-mark/:
    post:
      operationId: edu_core_teacher_attendances_batch_mark_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/edu-core/teacher/grades/:
    get:
      operationId: edu_core_teacher_grades_list
      parameters:
      - in: query
        name: academic_year
        schema:
          type: integer
      - in: query
        name: date_given
        schema:
          type: string
          format: date
      - in: query
        name: date_given__gte
        schema:
          type: string
          format: date
      - in: query
        name: date_given__lte
        schema:
          type: string
          format: date
      - in: query
        name: grade_type
        schema:
          type: string
          title: Тип оценки
          enum:
          - EXAM
          - HOMEWORK_GRADE
          - LESSON_WORK
          - PERIOD_AVG
          - PERIOD_FINAL
          - PROJECT
          - QUIZ
          - TEST
          - YEAR_AVG
          - YEAR_FINAL
        description: |-
          * `LESSON_WORK` - Работа на занятии
          * `HOMEWORK_GRADE` - Оценка за ДЗ
          * `TEST` - Контрольная/Тест
          * `PROJECT` - Проект
          * `QUIZ` - Опрос/Летучка
          * `EXAM` - Экзамен/Зачет
          * `PERIOD_AVG` - Средняя за период (расчетная)
          * `PERIOD_FINAL` - Итог за период (выставленная)
          * `YEAR_AVG` - Средняя за год (расчетная)
          * `YEAR_FINAL` - Итог за год (выставленная)
      - in: query
        name: grade_type__in
        schema:
          type: array
          items:
            type: string
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - in: query
        name: homework_submission
        schema:
          type: integer
      - in: query
        name: lesson
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student
        schema:
          type: integer
      - in: query
        name: study_period
        schema:
          type: integer
      - in: query
        name: subject
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradeList'
          description: ''
    post:
      operationId: edu_core_teacher_grades_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /api/edu-core/teacher/grades/{id}/:
    get:
      operationId: edu_core_teacher_grades_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    put:
      operationId: edu_core_teacher_grades_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    patch:
      operationId: edu_core_teacher_grades_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    delete:
      operationId: edu_core_teacher_grades_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/homework/:
    get:
      operationId: edu_core_teacher_homework_list
      parameters:
      - in: query
        name: author
        schema:
          type: integer
        description: Фильтр по ID автора ДЗ
      - in: query
        name: due_date__exact
        schema:
          type: string
          format: date
      - in: query
        name: due_date__gte
        schema:
          type: string
          format: date
      - in: query
        name: due_date__lte
        schema:
          type: string
          format: date
      - in: query
        name: due_date_after
        schema:
          type: string
          format: date
        description: Фильтр по сроку сдачи (диапазон дат)
      - in: query
        name: due_date_before
        schema:
          type: string
          format: date
        description: Фильтр по сроку сдачи (диапазон дат)
      - in: query
        name: journal_entry
        schema:
          type: integer
        description: Фильтр по ID записи в журнале
      - in: query
        name: journal_entry__lesson
        schema:
          type: integer
        description: Фильтр по ID урока (связанного с ДЗ через запись в журнале)
      - in: query
        name: journal_entry__lesson__student_group
        schema:
          type: integer
        description: Фильтр по ID студенческой группы урока
      - in: query
        name: journal_entry__lesson__subject
        schema:
          type: integer
        description: Фильтр по ID предмета урока
      - in: query
        name: lesson
        schema:
          type: integer
        description: Фильтр по ID урока (связанного с ДЗ через запись в журнале)
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkList'
          description: ''
    post:
      operationId: edu_core_teacher_homework_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
  /api/edu-core/teacher/homework-submissions/:
    get:
      operationId: edu_core_teacher_homework_submissions_list
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: query
        name: homework
        schema:
          type: integer
        description: Фильтр по ID домашнего задания
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student
        schema:
          type: integer
        description: Фильтр по ID студента
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkSubmissionList'
          description: ''
    post:
      operationId: edu_core_teacher_homework_submissions_create
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
  /api/edu-core/teacher/homework-submissions/{id}/:
    get:
      operationId: edu_core_teacher_homework_submissions_retrieve
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    put:
      operationId: edu_core_teacher_homework_submissions_update
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    patch:
      operationId: edu_core_teacher_homework_submissions_partial_update
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    delete:
      operationId: edu_core_teacher_homework_submissions_destroy
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/homework-submissions/{id}/grade/:
    post:
      operationId: edu_core_teacher_homework_submissions_grade_create
      description: Выставление или обновление оценки для сдачи домашнего задания.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /api/edu-core/teacher/homework-submissions/{submission_pk}/attachments/:
    get:
      operationId: edu_core_teacher_homework_submissions_attachments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubmissionAttachmentList'
          description: ''
    post:
      operationId: edu_core_teacher_homework_submissions_attachments_create
      parameters:
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
  /api/edu-core/teacher/homework-submissions/{submission_pk}/attachments/{id}/:
    get:
      operationId: edu_core_teacher_homework_submissions_attachments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    put:
      operationId: edu_core_teacher_homework_submissions_attachments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    patch:
      operationId: edu_core_teacher_homework_submissions_attachments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionAttachmentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionAttachment'
          description: ''
    delete:
      operationId: edu_core_teacher_homework_submissions_attachments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this файл сдачи ДЗ.
        required: true
      - in: path
        name: submission_pk
        schema:
          type: integer
          title: Сдача ДЗ
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/homework/{homework_pk}/attachments/:
    get:
      operationId: edu_core_teacher_homework_attachments_list
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkAttachmentList'
          description: ''
    post:
      operationId: edu_core_teacher_homework_attachments_create
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
  /api/edu-core/teacher/homework/{homework_pk}/attachments/{id}/:
    get:
      operationId: edu_core_teacher_homework_attachments_retrieve
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
    put:
      operationId: edu_core_teacher_homework_attachments_update
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkAttachmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
    patch:
      operationId: edu_core_teacher_homework_attachments_partial_update
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkAttachmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkAttachmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkAttachmentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkAttachment'
          description: ''
    delete:
      operationId: edu_core_teacher_homework_attachments_destroy
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this прикрепленный файл к
          ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/homework/{homework_pk}/submissions/:
    get:
      operationId: edu_core_teacher_homework_submissions_list_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: query
        name: homework
        schema:
          type: integer
        description: Фильтр по ID домашнего задания
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student
        schema:
          type: integer
        description: Фильтр по ID студента
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkSubmissionList'
          description: ''
    post:
      operationId: edu_core_teacher_homework_submissions_create_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
  /api/edu-core/teacher/homework/{homework_pk}/submissions/{id}/:
    get:
      operationId: edu_core_teacher_homework_submissions_retrieve_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    put:
      operationId: edu_core_teacher_homework_submissions_update_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkSubmissionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    patch:
      operationId: edu_core_teacher_homework_submissions_partial_update_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkSubmissionRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkSubmission'
          description: ''
    delete:
      operationId: edu_core_teacher_homework_submissions_destroy_2
      description: |-
        ViewSet для управления сдачами домашних заданий (HomeworkSubmission).
        - Админы видят все.
        - Учителя видят сдачи по своим ДЗ или ДЗ для своих занятий.
        - Студенты (если этот ViewSet используется и для них) видят только свои сдачи.
        Поддерживает фильтрацию через HomeworkSubmissionFilter.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/homework/{homework_pk}/submissions/{id}/grade/:
    post:
      operationId: edu_core_teacher_homework_submissions_grade_create_2
      description: Выставление или обновление оценки для сдачи домашнего задания.
      parameters:
      - in: path
        name: homework_pk
        schema:
          type: integer
          title: Домашнее задание
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сдача ДЗ.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /api/edu-core/teacher/homework/{id}/:
    get:
      operationId: edu_core_teacher_homework_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    put:
      operationId: edu_core_teacher_homework_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    patch:
      operationId: edu_core_teacher_homework_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    delete:
      operationId: edu_core_teacher_homework_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/journal-entries/:
    get:
      operationId: edu_core_teacher_journal_entries_list
      parameters:
      - in: query
        name: date_filled__date
        schema:
          type: string
          format: date
      - in: query
        name: date_filled__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: date_filled__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: lesson
        schema:
          type: integer
      - in: query
        name: lesson__student_group
        schema:
          type: integer
      - in: query
        name: lesson__study_period
        schema:
          type: integer
      - in: query
        name: lesson__study_period__academic_year
        schema:
          type: integer
      - in: query
        name: lesson__subject
        schema:
          type: integer
      - in: query
        name: lesson__teacher
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonJournalEntryList'
          description: ''
    post:
      operationId: edu_core_teacher_journal_entries_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
  /api/edu-core/teacher/journal-entries/{journal_entry_pk}/homework/:
    get:
      operationId: edu_core_teacher_journal_entries_homework_list
      parameters:
      - in: query
        name: author
        schema:
          type: integer
        description: Фильтр по ID автора ДЗ
      - in: query
        name: due_date__exact
        schema:
          type: string
          format: date
      - in: query
        name: due_date__gte
        schema:
          type: string
          format: date
      - in: query
        name: due_date__lte
        schema:
          type: string
          format: date
      - in: query
        name: due_date_after
        schema:
          type: string
          format: date
        description: Фильтр по сроку сдачи (диапазон дат)
      - in: query
        name: due_date_before
        schema:
          type: string
          format: date
        description: Фильтр по сроку сдачи (диапазон дат)
      - in: query
        name: journal_entry
        schema:
          type: integer
        description: Фильтр по ID записи в журнале
      - in: query
        name: journal_entry__lesson
        schema:
          type: integer
        description: Фильтр по ID урока (связанного с ДЗ через запись в журнале)
      - in: query
        name: journal_entry__lesson__student_group
        schema:
          type: integer
        description: Фильтр по ID студенческой группы урока
      - in: query
        name: journal_entry__lesson__subject
        schema:
          type: integer
        description: Фильтр по ID предмета урока
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      - in: query
        name: lesson
        schema:
          type: integer
        description: Фильтр по ID урока (связанного с ДЗ через запись в журнале)
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeworkList'
          description: ''
    post:
      operationId: edu_core_teacher_journal_entries_homework_create
      parameters:
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
  /api/edu-core/teacher/journal-entries/{journal_entry_pk}/homework/{id}/:
    get:
      operationId: edu_core_teacher_journal_entries_homework_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    put:
      operationId: edu_core_teacher_journal_entries_homework_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeworkRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    patch:
      operationId: edu_core_teacher_journal_entries_homework_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeworkRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
    delete:
      operationId: edu_core_teacher_journal_entries_homework_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this домашнее задание.
        required: true
      - in: path
        name: journal_entry_pk
        schema:
          type: integer
          title: Запись в журнале
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/journal-entries/{id}/:
    get:
      operationId: edu_core_teacher_journal_entries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    put:
      operationId: edu_core_teacher_journal_entries_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    patch:
      operationId: edu_core_teacher_journal_entries_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    delete:
      operationId: edu_core_teacher_journal_entries_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/my-groups/:
    get:
      operationId: edu_core_teacher_my_groups_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentGroupList'
          description: ''
  /api/edu-core/teacher/schedule/:
    get:
      operationId: edu_core_teacher_schedule_list
      description: |-
        ViewSet для управления Занятиями (Lessons).
        Предоставляет CRUD для админов/учителей и кастомный эндпоинт 'my-schedule'
        для получения персонального расписания студентов, учителей и родителей.
      parameters:
      - in: query
        name: classroom
        schema:
          type: integer
      - in: query
        name: end_time__date
        schema:
          type: string
          format: date
      - in: query
        name: end_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: end_time__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: lesson_type
        schema:
          type: string
          title: Тип занятия
          enum:
          - CONSULTATION
          - EVENT
          - EXAM
          - LAB
          - LECTURE
          - OTHER
          - PRACTICE
          - SEMINAR
        description: |-
          * `LECTURE` - Лекция
          * `PRACTICE` - Практическое занятие
          * `LAB` - Лабораторная работа
          * `SEMINAR` - Семинар
          * `CONSULTATION` - Консультация
          * `EXAM` - Экзамен/Зачет
          * `EVENT` - Мероприятие/Событие
          * `OTHER` - Другое
      - in: query
        name: lesson_type__in
        schema:
          type: array
          items:
            type: string
            title: Тип занятия
            enum:
            - CONSULTATION
            - EVENT
            - EXAM
            - LAB
            - LECTURE
            - OTHER
            - PRACTICE
            - SEMINAR
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_time__date
        schema:
          type: string
          format: date
      - in: query
        name: start_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: start_time__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: student_group
        schema:
          type: integer
      - in: query
        name: study_period
        schema:
          type: integer
      - in: query
        name: subject
        schema:
          type: integer
      - in: query
        name: teacher
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonListList'
          description: ''
  /api/edu-core/teacher/schedule/{lesson_pk}/attendances/:
    get:
      operationId: edu_core_teacher_schedule_attendances_list
      parameters:
      - in: query
        name: journal_entry
        schema:
          type: integer
      - in: query
        name: journal_entry__lesson
        schema:
          type: integer
      - in: query
        name: journal_entry__lesson__start_time__date
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__start_time__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: journal_entry__lesson__start_time__date__lte
        schema:
          type: string
          format: date
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          title: Статус посещаемости
          enum:
          - L
          - N
          - P
          - R
          - V
        description: |-
          * `P` - Присутствовал (П)
          * `V` - Отсутствовал по ув. причине (УП)
          * `N` - Отсутствовал по неув. причине (Н)
          * `L` - Опоздал (О)
          * `R` - Дистанционно (Д)
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - in: query
        name: student
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttendanceList'
          description: ''
    post:
      operationId: edu_core_teacher_schedule_attendances_create
      parameters:
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/edu-core/teacher/schedule/{lesson_pk}/attendances/{id}/:
    get:
      operationId: edu_core_teacher_schedule_attendances_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    put:
      operationId: edu_core_teacher_schedule_attendances_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    patch:
      operationId: edu_core_teacher_schedule_attendances_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    delete:
      operationId: edu_core_teacher_schedule_attendances_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись о посещаемости.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/schedule/{lesson_pk}/attendances/batch-mark/:
    post:
      operationId: edu_core_teacher_schedule_attendances_batch_mark_create
      parameters:
      - in: path
        name: lesson_pk
        schema:
          type: string
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/edu-core/teacher/schedule/{lesson_pk}/grades/:
    get:
      operationId: edu_core_teacher_schedule_grades_list
      parameters:
      - in: query
        name: academic_year
        schema:
          type: integer
      - in: query
        name: date_given
        schema:
          type: string
          format: date
      - in: query
        name: date_given__gte
        schema:
          type: string
          format: date
      - in: query
        name: date_given__lte
        schema:
          type: string
          format: date
      - in: query
        name: grade_type
        schema:
          type: string
          title: Тип оценки
          enum:
          - EXAM
          - HOMEWORK_GRADE
          - LESSON_WORK
          - PERIOD_AVG
          - PERIOD_FINAL
          - PROJECT
          - QUIZ
          - TEST
          - YEAR_AVG
          - YEAR_FINAL
        description: |-
          * `LESSON_WORK` - Работа на занятии
          * `HOMEWORK_GRADE` - Оценка за ДЗ
          * `TEST` - Контрольная/Тест
          * `PROJECT` - Проект
          * `QUIZ` - Опрос/Летучка
          * `EXAM` - Экзамен/Зачет
          * `PERIOD_AVG` - Средняя за период (расчетная)
          * `PERIOD_FINAL` - Итог за период (выставленная)
          * `YEAR_AVG` - Средняя за год (расчетная)
          * `YEAR_FINAL` - Итог за год (выставленная)
      - in: query
        name: grade_type__in
        schema:
          type: array
          items:
            type: string
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - in: query
        name: homework_submission
        schema:
          type: integer
      - in: query
        name: lesson
        schema:
          type: integer
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student
        schema:
          type: integer
      - in: query
        name: study_period
        schema:
          type: integer
      - in: query
        name: subject
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradeList'
          description: ''
    post:
      operationId: edu_core_teacher_schedule_grades_create
      parameters:
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /api/edu-core/teacher/schedule/{lesson_pk}/grades/{id}/:
    get:
      operationId: edu_core_teacher_schedule_grades_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    put:
      operationId: edu_core_teacher_schedule_grades_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    patch:
      operationId: edu_core_teacher_schedule_grades_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGradeRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    delete:
      operationId: edu_core_teacher_schedule_grades_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this оценка.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие (если применимо)
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/schedule/{lesson_pk}/journal/:
    get:
      operationId: edu_core_teacher_schedule_journal_list
      parameters:
      - in: query
        name: date_filled__date
        schema:
          type: string
          format: date
      - in: query
        name: date_filled__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: date_filled__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: lesson
        schema:
          type: integer
      - in: query
        name: lesson__student_group
        schema:
          type: integer
      - in: query
        name: lesson__study_period
        schema:
          type: integer
      - in: query
        name: lesson__study_period__academic_year
        schema:
          type: integer
      - in: query
        name: lesson__subject
        schema:
          type: integer
      - in: query
        name: lesson__teacher
        schema:
          type: integer
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonJournalEntryList'
          description: ''
    post:
      operationId: edu_core_teacher_schedule_journal_create
      parameters:
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
  /api/edu-core/teacher/schedule/{lesson_pk}/journal/{id}/:
    get:
      operationId: edu_core_teacher_schedule_journal_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    put:
      operationId: edu_core_teacher_schedule_journal_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonJournalEntryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    patch:
      operationId: edu_core_teacher_schedule_journal_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLessonJournalEntryRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonJournalEntry'
          description: ''
    delete:
      operationId: edu_core_teacher_schedule_journal_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this запись в журнале занятия.
        required: true
      - in: path
        name: lesson_pk
        schema:
          type: integer
          title: Занятие
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/edu-core/teacher/schedule/{id}/:
    get:
      operationId: edu_core_teacher_schedule_retrieve
      description: |-
        ViewSet для управления Занятиями (Lessons).
        Предоставляет CRUD для админов/учителей и кастомный эндпоинт 'my-schedule'
        для получения персонального расписания студентов, учителей и родителей.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this занятие.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
  /api/edu-core/teacher/schedule/my-schedule/:
    get:
      operationId: edu_core_teacher_schedule_my_schedule_retrieve
      description: |-
        Возвращает персонализированное расписание для текущего пользователя.
        Фильтры (включая даты) применяются через DjangoFilterBackend с использованием self.filterset_class.
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonList'
          description: ''
  /api/edu-core/teacher/subject-materials/:
    get:
      operationId: edu_core_teacher_subject_materials_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student_group
        schema:
          type: integer
      - in: query
        name: subject
        schema:
          type: integer
      - in: query
        name: uploaded_by
        schema:
          type: integer
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubjectMaterialList'
          description: ''
    post:
      operationId: edu_core_teacher_subject_materials_create
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectMaterial'
          description: ''
  /api/edu-core/teacher/subject-materials/{id}/:
    get:
      operationId: edu_core_teacher_subject_materials_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный материал.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectMaterial'
          description: ''
    put:
      operationId: edu_core_teacher_subject_materials_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный материал.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubjectMaterialRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectMaterial'
          description: ''
    patch:
      operationId: edu_core_teacher_subject_materials_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный материал.
        required: true
      tags:
      - edu-core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubjectMaterialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubjectMaterialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubjectMaterialRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectMaterial'
          description: ''
    delete:
      operationId: edu_core_teacher_subject_materials_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this учебный материал.
        required: true
      tags:
      - edu-core
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/messaging/chats/:
    get:
      operationId: messaging_chats_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - messaging
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatList'
          description: ''
    post:
      operationId: messaging_chats_create
      tags:
      - messaging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
  /api/messaging/chats/{chat_pk}/media/:
    get:
      operationId: messaging_chats_media_list
      parameters:
      - in: path
        name: chat_pk
        schema:
          type: integer
          title: Чат
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
          enum:
          - file
          - image
          - video
        description: |-
          Media Type

          * `image` - Image
          * `video` - Video
          * `file` - File
      tags:
      - messaging
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMediaMessageList'
          description: ''
  /api/messaging/chats/{chat_pk}/media/{id}/:
    get:
      operationId: messaging_chats_media_retrieve
      parameters:
      - in: path
        name: chat_pk
        schema:
          type: integer
          title: Чат
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сообщение.
        required: true
      tags:
      - messaging
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaMessage'
          description: ''
  /api/messaging/chats/{chat_pk}/messages/:
    get:
      operationId: messaging_chats_messages_list
      parameters:
      - in: path
        name: chat_pk
        schema:
          type: integer
          title: Чат
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - messaging
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessageList'
          description: ''
    post:
      operationId: messaging_chats_messages_create
      parameters:
      - in: path
        name: chat_pk
        schema:
          type: integer
          title: Чат
        required: true
      tags:
      - messaging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /api/messaging/chats/{chat_pk}/messages/{id}/:
    get:
      operationId: messaging_chats_messages_retrieve
      parameters:
      - in: path
        name: chat_pk
        schema:
          type: integer
          title: Чат
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сообщение.
        required: true
      tags:
      - messaging
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    put:
      operationId: messaging_chats_messages_update
      parameters:
      - in: path
        name: chat_pk
        schema:
          type: integer
          title: Чат
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сообщение.
        required: true
      tags:
      - messaging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    patch:
      operationId: messaging_chats_messages_partial_update
      parameters:
      - in: path
        name: chat_pk
        schema:
          type: integer
          title: Чат
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сообщение.
        required: true
      tags:
      - messaging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    delete:
      operationId: messaging_chats_messages_destroy
      parameters:
      - in: path
        name: chat_pk
        schema:
          type: integer
          title: Чат
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this сообщение.
        required: true
      tags:
      - messaging
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/messaging/chats/{id}/:
    get:
      operationId: messaging_chats_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this чат.
        required: true
      tags:
      - messaging
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
    put:
      operationId: messaging_chats_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this чат.
        required: true
      tags:
      - messaging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
    patch:
      operationId: messaging_chats_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this чат.
        required: true
      tags:
      - messaging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChatRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
    delete:
      operationId: messaging_chats_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this чат.
        required: true
      tags:
      - messaging
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/messaging/chats/{id}/add_participant/:
    post:
      operationId: messaging_chats_add_participant_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this чат.
        required: true
      tags:
      - messaging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
  /api/messaging/chats/{id}/leave/:
    post:
      operationId: messaging_chats_leave_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this чат.
        required: true
      tags:
      - messaging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
  /api/messaging/chats/{id}/mark-read/:
    post:
      operationId: messaging_chats_mark_read_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this чат.
        required: true
      tags:
      - messaging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
  /api/messaging/chats/{id}/remove_participant/:
    post:
      operationId: messaging_chats_remove_participant_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this чат.
        required: true
      tags:
      - messaging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
  /api/notifications/list/:
    get:
      operationId: notifications_list_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
    post:
      operationId: notifications_list_create
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/list/{id}/:
    get:
      operationId: notifications_list_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    put:
      operationId: notifications_list_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    patch:
      operationId: notifications_list_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    delete:
      operationId: notifications_list_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/notifications/list/{id}/mark-read/:
    post:
      operationId: notifications_list_mark_read_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/list/{id}/mark-unread/:
    post:
      operationId: notifications_list_mark_unread_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/list/mark-all-read/:
    post:
      operationId: notifications_list_mark_all_read_create
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/settings/:
    get:
      operationId: notifications_settings_retrieve
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationSettings'
          description: ''
    put:
      operationId: notifications_settings_update
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserNotificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserNotificationSettingsRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationSettings'
          description: ''
    patch:
      operationId: notifications_settings_partial_update
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationSettingsRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationSettings'
          description: ''
  /api/stats/admin/attendance/overall/:
    get:
      operationId: stats_admin_attendance_overall_retrieve
      tags:
      - stats
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/stats/admin/groups/{group_id}/performance/:
    get:
      operationId: stats_admin_groups_performance_retrieve
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      tags:
      - stats
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/stats/admin/homework/overall/:
    get:
      operationId: stats_admin_homework_overall_retrieve
      tags:
      - stats
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/stats/admin/platform-summary/:
    get:
      operationId: stats_admin_platform_summary_retrieve
      tags:
      - stats
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/stats/admin/students-performance-filtered/:
    get:
      operationId: stats_admin_students_performance_filtered_retrieve
      tags:
      - stats
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/stats/admin/teachers-load/detail/{teacher_id}/:
    get:
      operationId: stats_admin_teachers_load_detail_retrieve
      parameters:
      - in: path
        name: teacher_id
        schema:
          type: integer
        required: true
      tags:
      - stats
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/stats/admin/teachers-load/summary/:
    get:
      operationId: stats_admin_teachers_load_summary_retrieve
      tags:
      - stats
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/stats/parent/child/{child_id}/performance/:
    get:
      operationId: stats_parent_child_performance_retrieve
      parameters:
      - in: path
        name: child_id
        schema:
          type: integer
        required: true
      tags:
      - stats
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/stats/student/my-performance/:
    get:
      operationId: stats_student_my_performance_retrieve
      tags:
      - stats
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/stats/teacher/my-groups/{group_id}/student-details/:
    get:
      operationId: stats_teacher_my_groups_student_details_retrieve
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      tags:
      - stats
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/stats/teacher/my-summary/:
    get:
      operationId: stats_teacher_my_summary_retrieve
      tags:
      - stats
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/users/admin/invitations/:
    get:
      operationId: users_admin_invitations_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvitationCodeList'
          description: ''
    post:
      operationId: users_admin_invitations_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationCodeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvitationCodeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvitationCodeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationCode'
          description: ''
  /api/users/admin/invitations/{id}/:
    get:
      operationId: users_admin_invitations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationCode'
          description: ''
    put:
      operationId: users_admin_invitations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationCodeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvitationCodeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvitationCodeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationCode'
          description: ''
    patch:
      operationId: users_admin_invitations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvitationCodeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvitationCodeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvitationCodeRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationCode'
          description: ''
    delete:
      operationId: users_admin_invitations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/admin/users/:
    get:
      operationId: users_admin_users_list
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_role_confirmed
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: role
        schema:
          type: string
          title: Роль
          enum:
          - ADMIN
          - PARENT
          - STUDENT
          - TEACHER
        description: |-
          * `STUDENT` - Студент
          * `TEACHER` - Преподаватель
          * `PARENT` - Родитель
          * `ADMIN` - Администратор
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_admin_users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/admin/users/{id}/:
    get:
      operationId: users_admin_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_admin_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUserUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUserUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserUpdate'
          description: ''
    patch:
      operationId: users_admin_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserUpdate'
          description: ''
    delete:
      operationId: users_admin_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/admin/users/{id}/initiate-password-reset/:
    post:
      operationId: users_admin_users_initiate_password_reset_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/change-password/:
    put:
      operationId: users_change_password_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: users_change_password_partial_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChangePasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChangePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChangePasswordRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/users/confirm/{token}/:
    get:
      operationId: users_confirm_retrieve
      parameters:
      - in: path
        name: token
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/login/:
    post:
      operationId: users_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/users/login/refresh/:
    post:
      operationId: users_login_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/password-reset/:
    post:
      operationId: users_password_reset_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/users/password-reset/confirm/:
    post:
      operationId: users_password_reset_confirm_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/profile/:
    get:
      operationId: users_profile_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_profile_update
      tags:
      - users
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_profile_partial_update
      tags:
      - users
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/users/users/:
    get:
      operationId: users_users_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: role
        schema:
          type: string
          title: Роль
          enum:
          - ADMIN
          - PARENT
          - STUDENT
          - TEACHER
        description: |-
          * `STUDENT` - Студент
          * `TEACHER` - Преподаватель
          * `PARENT` - Родитель
          * `ADMIN` - Администратор
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/users/users/{id}/:
    get:
      operationId: users_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    AcademicYear:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название учебного года
          description: Например, 2024-2025
          maxLength: 100
        start_date:
          type: string
          format: date
          title: Дата начала
        end_date:
          type: string
          format: date
          title: Дата окончания
        is_current:
          type: boolean
          title: Текущий год
          description: Только один учебный год может быть помечен как текущий
      required:
      - end_date
      - id
      - name
      - start_date
    AcademicYearRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название учебного года
          description: Например, 2024-2025
          maxLength: 100
        start_date:
          type: string
          format: date
          title: Дата начала
        end_date:
          type: string
          format: date
          title: Дата окончания
        is_current:
          type: boolean
          title: Текущий год
          description: Только один учебный год может быть помечен как текущий
      required:
      - end_date
      - name
      - start_date
    AdminUserUpdate:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        patronymic:
          type: string
          nullable: true
          maxLength: 150
        is_active:
          type: boolean
        is_role_confirmed:
          type: boolean
        role:
          $ref: '#/components/schemas/RoleEnum'
    AdminUserUpdateRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        patronymic:
          type: string
          nullable: true
          maxLength: 150
        is_active:
          type: boolean
        is_role_confirmed:
          type: boolean
        role:
          $ref: '#/components/schemas/RoleEnum'
        parent_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
          description: List of Parent IDs to assign to this student (max 2).
        children_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
          description: List of Student IDs to assign to this parent.
    Attendance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lesson_id:
          type: integer
          readOnly: true
        student_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Статус посещаемости
        comment:
          type: string
          title: Комментарий
          maxLength: 255
        marked_at:
          type: string
          format: date-time
          readOnly: true
          title: Когда отмечено
        marked_by:
          type: integer
          readOnly: true
          nullable: true
        marked_by_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
      required:
      - id
      - lesson_id
      - marked_at
      - marked_by
      - marked_by_details
      - student_details
    AttendanceRequest:
      type: object
      properties:
        journal_entry:
          type: integer
          writeOnly: true
          title: Запись в журнале
        student:
          type: integer
          writeOnly: true
          title: Студент
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Статус посещаемости
        comment:
          type: string
          title: Комментарий
          maxLength: 255
      required:
      - journal_entry
      - student
    ChangePasswordRequest:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password2:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - new_password
      - new_password2
      - old_password
    Chat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        chat_type:
          allOf:
          - $ref: '#/components/schemas/ChatTypeEnum'
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 150
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Создан
        participants:
          type: array
          items:
            $ref: '#/components/schemas/User'
          readOnly: true
        last_message_details:
          allOf:
          - $ref: '#/components/schemas/Message'
          readOnly: true
          nullable: true
        unread_count:
          type: integer
          readOnly: true
        display_name:
          type: string
          readOnly: true
        created_by_details:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
          nullable: true
      required:
      - chat_type
      - created_at
      - created_by_details
      - display_name
      - id
      - last_message_details
      - participants
      - unread_count
    ChatRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 150
        other_user_id:
          type: integer
          writeOnly: true
          nullable: true
        participant_ids:
          type: array
          items:
            type: integer
            minimum: 1
          writeOnly: true
          nullable: true
    ChatTypeEnum:
      enum:
      - PRIVATE
      - GROUP
      type: string
      description: |-
        * `PRIVATE` - Личный чат
        * `GROUP` - Групповой чат
    Classroom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        identifier:
          type: string
          title: Номер/название
          maxLength: 50
        capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Вместимость
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          title: Тип аудитории
        equipment:
          type: string
          title: Оборудование и примечания
      required:
      - id
      - identifier
    ClassroomRequest:
      type: object
      properties:
        identifier:
          type: string
          minLength: 1
          title: Номер/название
          maxLength: 50
        capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Вместимость
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          title: Тип аудитории
        equipment:
          type: string
          title: Оборудование и примечания
      required:
      - identifier
    Curriculum:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название учебного плана
          maxLength: 255
        academic_year_details:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
        student_group_details:
          allOf:
          - $ref: '#/components/schemas/StudentGroup'
          readOnly: true
        description:
          type: string
          title: Описание
        is_active:
          type: boolean
          title: Активен
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CurriculumEntry'
          readOnly: true
      required:
      - academic_year_details
      - entries
      - id
      - name
      - student_group_details
    CurriculumEntry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        curriculum:
          type: integer
          title: Учебный план
        curriculum_id:
          type: integer
          readOnly: true
        subject_details:
          allOf:
          - $ref: '#/components/schemas/Subject'
          readOnly: true
        teacher_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
        study_period_details:
          allOf:
          - $ref: '#/components/schemas/StudyPeriod'
          readOnly: true
        planned_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Запланировано часов в периоде
        scheduled_hours:
          type: number
          format: double
          readOnly: true
          default: 0.0
        remaining_hours:
          type: number
          format: double
          readOnly: true
          default: 0.0
      required:
      - curriculum
      - curriculum_id
      - id
      - planned_hours
      - remaining_hours
      - scheduled_hours
      - study_period_details
      - subject_details
      - teacher_details
    CurriculumEntryRequest:
      type: object
      properties:
        curriculum:
          type: integer
          title: Учебный план
        subject:
          type: integer
          writeOnly: true
          title: Предмет
        teacher:
          type: integer
          writeOnly: true
          nullable: true
          title: Преподаватель
        study_period:
          type: integer
          writeOnly: true
          title: Учебный период
        planned_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Запланировано часов в периоде
      required:
      - curriculum
      - planned_hours
      - study_period
      - subject
    CurriculumRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название учебного плана
          maxLength: 255
        academic_year:
          type: integer
          writeOnly: true
          title: Учебный год
        student_group:
          type: integer
          writeOnly: true
          title: Учебная группа
        description:
          type: string
          title: Описание
        is_active:
          type: boolean
          title: Активен
      required:
      - academic_year
      - name
      - student_group
    EduUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Адрес электронной почты
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        patronymic:
          type: string
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
          title: Роль
        profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          readOnly: true
      required:
      - email
      - id
      - profile
      - role
    EduUserRequest:
      type: object
      properties:
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        patronymic:
          type: string
          maxLength: 150
    Grade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
        subject_details:
          allOf:
          - $ref: '#/components/schemas/Subject'
          readOnly: true
        study_period_details:
          allOf:
          - $ref: '#/components/schemas/StudyPeriod'
          readOnly: true
          nullable: true
        academic_year_details:
          allOf:
          - $ref: '#/components/schemas/AcademicYear'
          readOnly: true
          nullable: true
        lesson_id:
          type: integer
          readOnly: true
          nullable: true
        lesson_details:
          allOf:
          - $ref: '#/components/schemas/LessonList'
          readOnly: true
          nullable: true
        homework_submission_details:
          allOf:
          - $ref: '#/components/schemas/LiteHomeworkSubmission'
          readOnly: true
          nullable: true
        grade_value:
          type: string
          title: Значение оценки
          maxLength: 10
        numeric_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
          title: Числовой эквивалент
        grade_type:
          allOf:
          - $ref: '#/components/schemas/GradeTypeEnum'
          title: Тип оценки
        date_given:
          type: string
          format: date
          title: Дата выставления
        comment:
          type: string
          title: Комментарий к оценке
        graded_by_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
        weight:
          type: integer
          maximum: 32767
          minimum: 0
          title: Вес оценки
      required:
      - academic_year_details
      - grade_type
      - grade_value
      - graded_by_details
      - homework_submission_details
      - id
      - lesson_details
      - lesson_id
      - student_details
      - study_period_details
      - subject_details
    GradeRequest:
      type: object
      properties:
        student:
          type: integer
          writeOnly: true
          title: Студент
        subject:
          type: integer
          writeOnly: true
          title: Предмет
        study_period:
          type: integer
          writeOnly: true
          nullable: true
          title: Учебный период (для текущих и итоговых за период)
        academic_year:
          type: integer
          writeOnly: true
          nullable: true
          title: Учебный год (для годовых итоговых)
        lesson:
          type: integer
          writeOnly: true
          nullable: true
          title: Занятие (если применимо)
        homework_submission:
          type: integer
          writeOnly: true
          nullable: true
          title: Сдача ДЗ (если применимо)
        grade_value:
          type: string
          minLength: 1
          title: Значение оценки
          maxLength: 10
        numeric_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
          title: Числовой эквивалент
        grade_type:
          allOf:
          - $ref: '#/components/schemas/GradeTypeEnum'
          title: Тип оценки
        date_given:
          type: string
          format: date
          title: Дата выставления
        comment:
          type: string
          title: Комментарий к оценке
        graded_by:
          type: integer
          writeOnly: true
          nullable: true
        weight:
          type: integer
          maximum: 32767
          minimum: 0
          title: Вес оценки
      required:
      - grade_type
      - grade_value
      - student
      - subject
    GradeTypeEnum:
      enum:
      - LESSON_WORK
      - HOMEWORK_GRADE
      - TEST
      - PROJECT
      - QUIZ
      - EXAM
      - PERIOD_AVG
      - PERIOD_FINAL
      - YEAR_AVG
      - YEAR_FINAL
      type: string
      description: |-
        * `LESSON_WORK` - Работа на занятии
        * `HOMEWORK_GRADE` - Оценка за ДЗ
        * `TEST` - Контрольная/Тест
        * `PROJECT` - Проект
        * `QUIZ` - Опрос/Летучка
        * `EXAM` - Экзамен/Зачет
        * `PERIOD_AVG` - Средняя за период (расчетная)
        * `PERIOD_FINAL` - Итог за период (выставленная)
        * `YEAR_AVG` - Средняя за год (расчетная)
        * `YEAR_FINAL` - Итог за год (выставленная)
    GroupPerformance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название группы
          maxLength: 100
        academic_year_name:
          type: string
          readOnly: true
        curator_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
        students_performance:
          type: array
          items:
            $ref: '#/components/schemas/StudentOverallPerformanceInGroup'
          readOnly: true
        group_average_grade:
          type: string
          readOnly: true
      required:
      - academic_year_name
      - curator_details
      - group_average_grade
      - id
      - name
      - students_performance
    GroupSubjectPerformanceStat:
      type: object
      properties:
        subject_id:
          type: integer
        subject_name:
          type: string
        average_grade:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
        grades_count:
          type: integer
      required:
      - average_grade
      - grades_count
      - subject_id
      - subject_name
    Homework:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lesson_id:
          type: integer
          readOnly: true
        lesson_subject:
          type: string
          readOnly: true
        title:
          type: string
          title: Заголовок/тема ДЗ
          maxLength: 255
        description:
          type: string
          title: Описание задания
        due_date:
          type: string
          format: date-time
          nullable: true
          title: Срок сдачи
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Выдано
        author_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/HomeworkAttachment'
          readOnly: true
        related_materials_details:
          type: array
          items:
            $ref: '#/components/schemas/SubjectMaterial'
          readOnly: true
      required:
      - attachments
      - author_details
      - created_at
      - description
      - id
      - lesson_id
      - lesson_subject
      - related_materials_details
    HomeworkAttachment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file_url:
          type: string
          format: uri
          readOnly: true
        description:
          type: string
          title: Описание файла
          maxLength: 255
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - file_url
      - id
      - uploaded_at
    HomeworkAttachmentRequest:
      type: object
      properties:
        homework:
          type: integer
          writeOnly: true
          title: Домашнее задание
        file:
          type: string
          format: binary
          writeOnly: true
          title: Файл
        description:
          type: string
          title: Описание файла
          maxLength: 255
      required:
      - file
      - homework
    HomeworkRequest:
      type: object
      properties:
        journal_entry:
          type: integer
          writeOnly: true
          title: Запись в журнале
        title:
          type: string
          minLength: 1
          title: Заголовок/тема ДЗ
          maxLength: 255
        description:
          type: string
          minLength: 1
          title: Описание задания
        due_date:
          type: string
          format: date-time
          nullable: true
          title: Срок сдачи
        author:
          type: integer
          writeOnly: true
          nullable: true
          title: Автор задания (преподаватель)
        related_materials:
          type: array
          items:
            type: integer
            writeOnly: true
            title: Связанные материалы
          writeOnly: true
          title: Связанные материалы
        files_to_upload:
          type: array
          items:
            type: string
            format: binary
          writeOnly: true
        material_ids_to_link:
          type: array
          items:
            type: integer
          writeOnly: true
        attachments_to_remove_ids:
          type: array
          items:
            type: integer
          writeOnly: true
          description: Список ID вложений (HomeworkAttachment), которые нужно удалить.
      required:
      - description
      - journal_entry
    HomeworkSubmission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        homework_title:
          type: string
          readOnly: true
        student:
          type: integer
          readOnly: true
          title: Студент
        student_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
        submitted_at:
          type: string
          format: date-time
          readOnly: true
          title: Время сдачи
        content:
          type: string
          title: Ответ/комментарий студента
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionAttachment'
          readOnly: true
        grade_details:
          type: string
          readOnly: true
      required:
      - attachments
      - grade_details
      - homework_title
      - id
      - student
      - student_details
      - submitted_at
    HomeworkSubmissionRequest:
      type: object
      properties:
        homework:
          type: integer
          writeOnly: true
          title: Домашнее задание
        content:
          type: string
          title: Ответ/комментарий студента
        files_to_upload:
          type: array
          items:
            type: string
            format: binary
          writeOnly: true
      required:
      - homework
    InvitationCode:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          readOnly: true
          title: Код
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: Назначенная роль
        created_by:
          type: integer
          readOnly: true
        created_by_email:
          type: string
          format: email
          readOnly: true
        used_by:
          type: integer
          readOnly: true
          nullable: true
        used_by_email:
          type: string
          format: email
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
          nullable: true
          title: Истекает
        is_valid:
          type: string
          readOnly: true
      required:
      - code
      - created_at
      - created_by
      - created_by_email
      - id
      - is_valid
      - role
      - used_by
      - used_by_email
    InvitationCodeRequest:
      type: object
      properties:
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: Назначенная роль
        expires_at:
          type: string
          format: date-time
          nullable: true
          title: Истекает
      required:
      - role
    Lesson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        study_period_details:
          allOf:
          - $ref: '#/components/schemas/StudyPeriod'
          readOnly: true
        student_group_details:
          allOf:
          - $ref: '#/components/schemas/StudentGroup'
          readOnly: true
        subject_details:
          allOf:
          - $ref: '#/components/schemas/Subject'
          readOnly: true
        teacher_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
        classroom_details:
          allOf:
          - $ref: '#/components/schemas/Classroom'
          readOnly: true
          nullable: true
        lesson_type:
          allOf:
          - $ref: '#/components/schemas/LessonTypeEnum'
          title: Тип занятия
        start_time:
          type: string
          format: date-time
          title: Время начала
        end_time:
          type: string
          format: date-time
          title: Время окончания
        curriculum_entry_details:
          allOf:
          - $ref: '#/components/schemas/CurriculumEntry'
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_by_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
        duration_hours:
          type: number
          format: double
          readOnly: true
      required:
      - classroom_details
      - created_at
      - created_by
      - created_by_details
      - curriculum_entry_details
      - duration_hours
      - end_time
      - id
      - start_time
      - student_group_details
      - study_period_details
      - subject_details
      - teacher_details
      - updated_at
    LessonJournalEntry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lesson_details:
          allOf:
          - $ref: '#/components/schemas/LessonList'
          readOnly: true
        topic_covered:
          type: string
          title: Пройденная тема на занятии
          maxLength: 500
        teacher_notes:
          type: string
          title: Заметки преподавателя о занятии
        date_filled:
          type: string
          format: date-time
          readOnly: true
          title: Дата заполнения журнала
      required:
      - date_filled
      - id
      - lesson_details
    LessonJournalEntryRequest:
      type: object
      properties:
        lesson:
          type: integer
          writeOnly: true
          title: Занятие
        topic_covered:
          type: string
          title: Пройденная тема на занятии
          maxLength: 500
        teacher_notes:
          type: string
          title: Заметки преподавателя о занятии
      required:
      - lesson
    LessonList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        subject_name:
          type: string
          readOnly: true
        teacher_name:
          type: string
          readOnly: true
        group_name:
          type: string
          readOnly: true
        classroom_identifier:
          type: string
          readOnly: true
          nullable: true
        lesson_type:
          allOf:
          - $ref: '#/components/schemas/LessonTypeEnum'
          title: Тип занятия
        start_time:
          type: string
          format: date-time
          title: Время начала
        end_time:
          type: string
          format: date-time
          title: Время окончания
        duration_hours:
          type: number
          format: double
          readOnly: true
      required:
      - classroom_identifier
      - duration_hours
      - end_time
      - group_name
      - id
      - start_time
      - subject_name
      - teacher_name
    LessonListRequest:
      type: object
      properties:
        lesson_type:
          allOf:
          - $ref: '#/components/schemas/LessonTypeEnum'
          title: Тип занятия
        start_time:
          type: string
          format: date-time
          title: Время начала
        end_time:
          type: string
          format: date-time
          title: Время окончания
      required:
      - end_time
      - start_time
    LessonRequest:
      type: object
      properties:
        study_period:
          type: integer
          writeOnly: true
          title: Учебный период
        student_group:
          type: integer
          writeOnly: true
          title: Учебная группа
        subject:
          type: integer
          writeOnly: true
          title: Предмет
        teacher:
          type: integer
          writeOnly: true
          title: Преподаватель
        classroom:
          type: integer
          writeOnly: true
          nullable: true
          title: Аудитория
        lesson_type:
          allOf:
          - $ref: '#/components/schemas/LessonTypeEnum'
          title: Тип занятия
        start_time:
          type: string
          format: date-time
          title: Время начала
        end_time:
          type: string
          format: date-time
          title: Время окончания
        curriculum_entry:
          type: integer
          writeOnly: true
          nullable: true
          title: Связанная запись учебного плана
      required:
      - end_time
      - start_time
      - student_group
      - study_period
      - subject
      - teacher
    LessonTypeEnum:
      enum:
      - LECTURE
      - PRACTICE
      - LAB
      - SEMINAR
      - CONSULTATION
      - EXAM
      - EVENT
      - OTHER
      type: string
      description: |-
        * `LECTURE` - Лекция
        * `PRACTICE` - Практическое занятие
        * `LAB` - Лабораторная работа
        * `SEMINAR` - Семинар
        * `CONSULTATION` - Консультация
        * `EXAM` - Экзамен/Зачет
        * `EVENT` - Мероприятие/Событие
        * `OTHER` - Другое
    LimitedProfile:
      type: object
      properties:
        avatar:
          type: string
          readOnly: true
      required:
      - avatar
    LimitedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          readOnly: true
          title: Имя
        last_name:
          type: string
          readOnly: true
          title: Фамилия
        profile:
          allOf:
          - $ref: '#/components/schemas/LimitedProfile'
          readOnly: true
      required:
      - first_name
      - id
      - last_name
      - profile
    LiteHomeworkSubmission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        homework_title:
          type: string
          readOnly: true
        student_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
        submitted_at:
          type: string
          format: date-time
          readOnly: true
          title: Время сдачи
        content:
          type: string
          readOnly: true
          title: Ответ/комментарий студента
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionAttachment'
          readOnly: true
      required:
      - attachments
      - content
      - homework_title
      - id
      - student_details
      - submitted_at
    MediaMessage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sender:
          allOf:
          - $ref: '#/components/schemas/LimitedUser'
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
          title: Время отправки
        content:
          type: string
          readOnly: true
          title: Текст сообщения
        file_url:
          type: string
          readOnly: true
        mime_type:
          type: string
          readOnly: true
          nullable: true
        file_size:
          type: integer
          readOnly: true
          nullable: true
        original_filename:
          type: string
          readOnly: true
          nullable: true
      required:
      - content
      - file_size
      - file_url
      - id
      - mime_type
      - original_filename
      - sender
      - timestamp
    Message:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        chat_id:
          type: integer
          readOnly: true
        sender:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        content:
          type: string
          title: Текст сообщения
        file:
          type: string
          format: uri
          nullable: true
          title: Файл
        file_url:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
          title: Время отправки
        mime_type:
          type: string
          readOnly: true
          nullable: true
        file_size:
          type: integer
          readOnly: true
          nullable: true
        original_filename:
          type: string
          readOnly: true
          nullable: true
      required:
      - chat_id
      - file_size
      - file_url
      - id
      - mime_type
      - original_filename
      - sender
      - timestamp
    MessageRequest:
      type: object
      properties:
        content:
          type: string
          title: Текст сообщения
        file:
          type: string
          format: binary
          nullable: true
          title: Файл
        _isSending:
          type: boolean
          writeOnly: true
          title: ' issending'
        _tempId:
          type: string
          writeOnly: true
          minLength: 1
          title: ' tempid'
    MyAttendance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        journal_entry:
          type: integer
          readOnly: true
          title: Запись в журнале
        lesson_id:
          type: integer
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
          title: Статус посещаемости
        comment:
          type: string
          readOnly: true
          title: Комментарий
        marked_at:
          type: string
          format: date-time
          readOnly: true
          title: Когда отмечено
      required:
      - comment
      - id
      - journal_entry
      - lesson_id
      - marked_at
      - status
    MyGrade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        subject:
          type: integer
          readOnly: true
          title: Предмет
        subject_details:
          allOf:
          - $ref: '#/components/schemas/Subject'
          readOnly: true
        study_period:
          type: integer
          readOnly: true
          nullable: true
          title: Учебный период (для текущих и итоговых за период)
        study_period_details:
          allOf:
          - $ref: '#/components/schemas/StudyPeriod'
          readOnly: true
          nullable: true
        lesson:
          type: integer
          readOnly: true
          nullable: true
          title: Занятие (если применимо)
        lesson_details:
          allOf:
          - $ref: '#/components/schemas/LessonList'
          readOnly: true
          nullable: true
        homework_submission:
          type: integer
          readOnly: true
          nullable: true
          title: Сдача ДЗ (если применимо)
        homework_submission_details:
          allOf:
          - $ref: '#/components/schemas/LiteHomeworkSubmission'
          readOnly: true
          nullable: true
        grade_value:
          type: string
          readOnly: true
          title: Значение оценки
        numeric_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
          title: Числовой эквивалент
        grade_type:
          allOf:
          - $ref: '#/components/schemas/GradeTypeEnum'
          readOnly: true
          title: Тип оценки
        date_given:
          type: string
          format: date
          readOnly: true
          title: Дата выставления
        comment:
          type: string
          readOnly: true
          title: Комментарий к оценке
        graded_by_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
        weight:
          type: integer
          readOnly: true
          title: Вес оценки
      required:
      - comment
      - date_given
      - grade_type
      - grade_value
      - graded_by_details
      - homework_submission
      - homework_submission_details
      - id
      - lesson
      - lesson_details
      - numeric_value
      - study_period
      - study_period_details
      - subject
      - subject_details
      - weight
    MyHomework:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lesson_id:
          type: integer
          readOnly: true
        lesson_subject:
          type: string
          readOnly: true
        title:
          type: string
          readOnly: true
          title: Заголовок/тема ДЗ
        description:
          type: string
          readOnly: true
          title: Описание задания
        due_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Срок сдачи
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Выдано
        author_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/HomeworkAttachment'
          readOnly: true
        related_materials_details:
          type: array
          items:
            $ref: '#/components/schemas/SubjectMaterial'
          readOnly: true
        submission_details_for_child:
          type: string
          readOnly: true
        submission_status_for_child:
          type: string
          readOnly: true
        grade_for_child_submission:
          type: string
          readOnly: true
      required:
      - attachments
      - author_details
      - created_at
      - description
      - due_date
      - grade_for_child_submission
      - id
      - lesson_id
      - lesson_subject
      - related_materials_details
      - submission_details_for_child
      - submission_status_for_child
      - title
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        recipient:
          type: integer
          readOnly: true
          title: Получатель
        message:
          type: string
          readOnly: true
          title: Текст уведомления
        notification_type:
          allOf:
          - $ref: '#/components/schemas/NotificationTypeEnum'
          readOnly: true
          title: Тип уведомления
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Создано
        is_read:
          type: boolean
          title: Прочитано
        content_type:
          type: integer
          readOnly: true
          nullable: true
        object_id:
          type: integer
          readOnly: true
          nullable: true
      required:
      - content_type
      - created_at
      - id
      - message
      - notification_type
      - object_id
      - recipient
    NotificationRequest:
      type: object
      properties:
        is_read:
          type: boolean
          title: Прочитано
    NotificationTypeEnum:
      enum:
      - SCHEDULE
      - MESSAGE
      - ASSIGNMENT_NEW
      - ASSIGNMENT_DUE
      - ASSIGNMENT_SUBMITTED
      - ASSIGNMENT_GRADED
      - GRADE_NEW
      - SYSTEM
      type: string
      description: |-
        * `SCHEDULE` - Расписание
        * `MESSAGE` - Сообщение в чате
        * `ASSIGNMENT_NEW` - Новое домашнее задание
        * `ASSIGNMENT_DUE` - Срок сдачи ДЗ
        * `ASSIGNMENT_SUBMITTED` - ДЗ сдано
        * `ASSIGNMENT_GRADED` - ДЗ проверено/оценено
        * `GRADE_NEW` - Новая оценка
        * `SYSTEM` - Системное
    PaginatedAcademicYearList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AcademicYear'
    PaginatedAttendanceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Attendance'
    PaginatedChatList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Chat'
    PaginatedClassroomList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Classroom'
    PaginatedCurriculumEntryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CurriculumEntry'
    PaginatedCurriculumList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Curriculum'
    PaginatedGradeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Grade'
    PaginatedGroupPerformanceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GroupPerformance'
    PaginatedHomeworkAttachmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HomeworkAttachment'
    PaginatedHomeworkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Homework'
    PaginatedHomeworkSubmissionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/HomeworkSubmission'
    PaginatedInvitationCodeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvitationCode'
    PaginatedLessonJournalEntryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LessonJournalEntry'
    PaginatedLessonListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LessonList'
    PaginatedMediaMessageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MediaMessage'
    PaginatedMessageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    PaginatedMyAttendanceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MyAttendance'
    PaginatedMyGradeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MyGrade'
    PaginatedMyHomeworkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MyHomework'
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedStudentGroupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentGroup'
    PaginatedStudentHomeworkSubmissionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentHomeworkSubmission'
    PaginatedStudyPeriodList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudyPeriod'
    PaginatedSubjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Subject'
    PaginatedSubjectMaterialList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SubjectMaterial'
    PaginatedSubjectTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SubjectType'
    PaginatedSubmissionAttachmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionAttachment'
    PaginatedTeacherLoadList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TeacherLoad'
    PaginatedTeacherSubjectPerformanceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TeacherSubjectPerformance'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PasswordResetConfirmRequest:
      type: object
      properties:
        new_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password2:
          type: string
          writeOnly: true
          minLength: 1
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - new_password
      - new_password2
      - token
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetRequestRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedAcademicYearRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название учебного года
          description: Например, 2024-2025
          maxLength: 100
        start_date:
          type: string
          format: date
          title: Дата начала
        end_date:
          type: string
          format: date
          title: Дата окончания
        is_current:
          type: boolean
          title: Текущий год
          description: Только один учебный год может быть помечен как текущий
    PatchedAdminUserUpdateRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        patronymic:
          type: string
          nullable: true
          maxLength: 150
        is_active:
          type: boolean
        is_role_confirmed:
          type: boolean
        role:
          $ref: '#/components/schemas/RoleEnum'
        parent_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
          description: List of Parent IDs to assign to this student (max 2).
        children_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
          description: List of Student IDs to assign to this parent.
    PatchedAttendanceRequest:
      type: object
      properties:
        journal_entry:
          type: integer
          writeOnly: true
          title: Запись в журнале
        student:
          type: integer
          writeOnly: true
          title: Студент
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Статус посещаемости
        comment:
          type: string
          title: Комментарий
          maxLength: 255
    PatchedChangePasswordRequest:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password2:
          type: string
          writeOnly: true
          minLength: 1
    PatchedChatRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 150
        other_user_id:
          type: integer
          writeOnly: true
          nullable: true
        participant_ids:
          type: array
          items:
            type: integer
            minimum: 1
          writeOnly: true
          nullable: true
    PatchedClassroomRequest:
      type: object
      properties:
        identifier:
          type: string
          minLength: 1
          title: Номер/название
          maxLength: 50
        capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Вместимость
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          title: Тип аудитории
        equipment:
          type: string
          title: Оборудование и примечания
    PatchedCurriculumEntryRequest:
      type: object
      properties:
        curriculum:
          type: integer
          title: Учебный план
        subject:
          type: integer
          writeOnly: true
          title: Предмет
        teacher:
          type: integer
          writeOnly: true
          nullable: true
          title: Преподаватель
        study_period:
          type: integer
          writeOnly: true
          title: Учебный период
        planned_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Запланировано часов в периоде
    PatchedCurriculumRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название учебного плана
          maxLength: 255
        academic_year:
          type: integer
          writeOnly: true
          title: Учебный год
        student_group:
          type: integer
          writeOnly: true
          title: Учебная группа
        description:
          type: string
          title: Описание
        is_active:
          type: boolean
          title: Активен
    PatchedGradeRequest:
      type: object
      properties:
        student:
          type: integer
          writeOnly: true
          title: Студент
        subject:
          type: integer
          writeOnly: true
          title: Предмет
        study_period:
          type: integer
          writeOnly: true
          nullable: true
          title: Учебный период (для текущих и итоговых за период)
        academic_year:
          type: integer
          writeOnly: true
          nullable: true
          title: Учебный год (для годовых итоговых)
        lesson:
          type: integer
          writeOnly: true
          nullable: true
          title: Занятие (если применимо)
        homework_submission:
          type: integer
          writeOnly: true
          nullable: true
          title: Сдача ДЗ (если применимо)
        grade_value:
          type: string
          minLength: 1
          title: Значение оценки
          maxLength: 10
        numeric_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
          title: Числовой эквивалент
        grade_type:
          allOf:
          - $ref: '#/components/schemas/GradeTypeEnum'
          title: Тип оценки
        date_given:
          type: string
          format: date
          title: Дата выставления
        comment:
          type: string
          title: Комментарий к оценке
        graded_by:
          type: integer
          writeOnly: true
          nullable: true
        weight:
          type: integer
          maximum: 32767
          minimum: 0
          title: Вес оценки
    PatchedHomeworkAttachmentRequest:
      type: object
      properties:
        homework:
          type: integer
          writeOnly: true
          title: Домашнее задание
        file:
          type: string
          format: binary
          writeOnly: true
          title: Файл
        description:
          type: string
          title: Описание файла
          maxLength: 255
    PatchedHomeworkRequest:
      type: object
      properties:
        journal_entry:
          type: integer
          writeOnly: true
          title: Запись в журнале
        title:
          type: string
          minLength: 1
          title: Заголовок/тема ДЗ
          maxLength: 255
        description:
          type: string
          minLength: 1
          title: Описание задания
        due_date:
          type: string
          format: date-time
          nullable: true
          title: Срок сдачи
        author:
          type: integer
          writeOnly: true
          nullable: true
          title: Автор задания (преподаватель)
        related_materials:
          type: array
          items:
            type: integer
            writeOnly: true
            title: Связанные материалы
          writeOnly: true
          title: Связанные материалы
        files_to_upload:
          type: array
          items:
            type: string
            format: binary
          writeOnly: true
        material_ids_to_link:
          type: array
          items:
            type: integer
          writeOnly: true
        attachments_to_remove_ids:
          type: array
          items:
            type: integer
          writeOnly: true
          description: Список ID вложений (HomeworkAttachment), которые нужно удалить.
    PatchedHomeworkSubmissionRequest:
      type: object
      properties:
        homework:
          type: integer
          writeOnly: true
          title: Домашнее задание
        content:
          type: string
          title: Ответ/комментарий студента
        files_to_upload:
          type: array
          items:
            type: string
            format: binary
          writeOnly: true
    PatchedInvitationCodeRequest:
      type: object
      properties:
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: Назначенная роль
        expires_at:
          type: string
          format: date-time
          nullable: true
          title: Истекает
    PatchedLessonJournalEntryRequest:
      type: object
      properties:
        lesson:
          type: integer
          writeOnly: true
          title: Занятие
        topic_covered:
          type: string
          title: Пройденная тема на занятии
          maxLength: 500
        teacher_notes:
          type: string
          title: Заметки преподавателя о занятии
    PatchedLessonRequest:
      type: object
      properties:
        study_period:
          type: integer
          writeOnly: true
          title: Учебный период
        student_group:
          type: integer
          writeOnly: true
          title: Учебная группа
        subject:
          type: integer
          writeOnly: true
          title: Предмет
        teacher:
          type: integer
          writeOnly: true
          title: Преподаватель
        classroom:
          type: integer
          writeOnly: true
          nullable: true
          title: Аудитория
        lesson_type:
          allOf:
          - $ref: '#/components/schemas/LessonTypeEnum'
          title: Тип занятия
        start_time:
          type: string
          format: date-time
          title: Время начала
        end_time:
          type: string
          format: date-time
          title: Время окончания
        curriculum_entry:
          type: integer
          writeOnly: true
          nullable: true
          title: Связанная запись учебного плана
    PatchedMessageRequest:
      type: object
      properties:
        content:
          type: string
          title: Текст сообщения
        file:
          type: string
          format: binary
          nullable: true
          title: Файл
        _isSending:
          type: boolean
          writeOnly: true
          title: ' issending'
        _tempId:
          type: string
          writeOnly: true
          minLength: 1
          title: ' tempid'
    PatchedNotificationRequest:
      type: object
      properties:
        is_read:
          type: boolean
          title: Прочитано
    PatchedStudentGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название группы
          maxLength: 100
        academic_year:
          type: integer
        curator:
          type: integer
          nullable: true
          title: Куратор
        students:
          type: array
          items:
            type: integer
            title: Студенты в группе
          title: Студенты в группе
        group_monitor:
          type: integer
          nullable: true
          title: Староста группы
    PatchedStudentHomeworkSubmissionRequest:
      type: object
      properties:
        content:
          type: string
          title: Ответ/комментарий студента
        files_to_upload:
          type: array
          items:
            type: string
            format: binary
          writeOnly: true
        homework_id:
          type: integer
          writeOnly: true
          title: Домашнее задание
    PatchedStudyPeriodRequest:
      type: object
      properties:
        academic_year:
          type: integer
          title: Учебный год
        name:
          type: string
          minLength: 1
          title: Название периода
          description: Например, 1-я Четверть, Осенний семестр
          maxLength: 100
        start_date:
          type: string
          format: date
          title: Дата начала
        end_date:
          type: string
          format: date
          title: Дата окончания
    PatchedSubjectMaterialRequest:
      type: object
      properties:
        subject:
          type: integer
          writeOnly: true
          title: Предмет
        student_group:
          type: integer
          writeOnly: true
          nullable: true
          title: Учебная группа (если применимо)
        title:
          type: string
          minLength: 1
          title: Название материала
          maxLength: 255
        description:
          type: string
          title: Описание
        uploaded_by:
          type: integer
          writeOnly: true
          nullable: true
        files_to_upload:
          type: array
          items:
            type: string
            format: binary
          writeOnly: true
    PatchedSubjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название предмета
          maxLength: 200
        code:
          type: string
          nullable: true
          title: Код предмета
          maxLength: 20
        description:
          type: string
          title: Описание
        subject_type:
          type: integer
          nullable: true
          title: Тип предмета
        lead_teachers:
          type: array
          items:
            type: integer
            writeOnly: true
            title: Основные преподаватели предмета
          writeOnly: true
          title: Основные преподаватели предмета
    PatchedSubjectTypeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название типа предмета
          maxLength: 100
        description:
          type: string
          title: Описание
    PatchedSubmissionAttachmentRequest:
      type: object
      properties:
        submission:
          type: integer
          writeOnly: true
          title: Сдача ДЗ
        file:
          type: string
          format: binary
          writeOnly: true
          title: Файл
    PatchedUserNotificationSettingsRequest:
      type: object
      properties:
        enable_schedule:
          type: boolean
          title: Расписание
        enable_messages:
          type: boolean
          title: Сообщения в чате
        enable_assignment_new:
          type: boolean
          title: Новые ДЗ
        enable_assignment_due:
          type: boolean
          title: Напоминания о сроках ДЗ
        enable_assignment_submitted:
          type: boolean
          title: Сдача ДЗ (для преподавателя)
        enable_assignment_graded:
          type: boolean
          title: Проверка/оценка ДЗ
        enable_grade_new:
          type: boolean
          title: Новые оценки
        enable_system:
          type: boolean
          title: Системные
    PatchedUserRequest:
      type: object
      properties:
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        patronymic:
          type: string
          maxLength: 150
        avatar:
          type: string
          format: binary
          writeOnly: true
          nullable: true
        phone_number:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 20
        bio:
          type: string
          writeOnly: true
          nullable: true
        date_of_birth:
          type: string
          format: date
          writeOnly: true
          nullable: true
        clear_avatar:
          type: boolean
          writeOnly: true
          default: false
        password:
          type: string
          writeOnly: true
          minLength: 1
    Profile:
      type: object
      properties:
        avatar:
          type: string
          format: uri
          nullable: true
          title: Аватар
          description: User profile picture
        phone_number:
          type: string
          title: Номер телефона
          description: Contact phone number (optional)
          maxLength: 20
        bio:
          type: string
          title: О себе
          description: A short biography (optional)
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
          description: Date of birth (optional)
    ProfileRequest:
      type: object
      properties:
        avatar:
          type: string
          format: binary
          nullable: true
          title: Аватар
          description: User profile picture
        phone_number:
          type: string
          title: Номер телефона
          description: Contact phone number (optional)
          maxLength: 20
        bio:
          type: string
          title: О себе
          description: A short biography (optional)
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
          description: Date of birth (optional)
    RoleEnum:
      enum:
      - STUDENT
      - TEACHER
      - PARENT
      - ADMIN
      type: string
      description: |-
        * `STUDENT` - Студент
        * `TEACHER` - Преподаватель
        * `PARENT` - Родитель
        * `ADMIN` - Администратор
    StatusEnum:
      enum:
      - P
      - V
      - N
      - L
      - R
      type: string
      description: |-
        * `P` - Присутствовал (П)
        * `V` - Отсутствовал по ув. причине (УП)
        * `N` - Отсутствовал по неув. причине (Н)
        * `L` - Опоздал (О)
        * `R` - Дистанционно (Д)
    StudentGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название группы
          maxLength: 100
        academic_year:
          type: integer
        academic_year_name:
          type: string
          readOnly: true
        curator:
          type: integer
          nullable: true
          title: Куратор
        curator_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
        students:
          type: array
          items:
            type: integer
            title: Студенты в группе
          title: Студенты в группе
        students_details:
          type: array
          items:
            $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
        group_monitor:
          type: integer
          nullable: true
          title: Староста группы
        group_monitor_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
        student_count:
          type: integer
          readOnly: true
      required:
      - academic_year
      - academic_year_name
      - curator_details
      - group_monitor_details
      - id
      - name
      - student_count
      - students_details
    StudentGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название группы
          maxLength: 100
        academic_year:
          type: integer
        curator:
          type: integer
          nullable: true
          title: Куратор
        students:
          type: array
          items:
            type: integer
            title: Студенты в группе
          title: Студенты в группе
        group_monitor:
          type: integer
          nullable: true
          title: Староста группы
      required:
      - academic_year
      - name
    StudentHomeworkSubmission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        homework:
          type: integer
          readOnly: true
          title: Домашнее задание
        homework_title:
          type: string
          readOnly: true
        student:
          type: integer
          readOnly: true
          title: Студент
        student_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
        submitted_at:
          type: string
          format: date-time
          readOnly: true
          title: Время сдачи
        content:
          type: string
          title: Ответ/комментарий студента
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionAttachment'
          readOnly: true
        grade_details:
          type: string
          readOnly: true
      required:
      - attachments
      - grade_details
      - homework
      - homework_title
      - id
      - student
      - student_details
      - submitted_at
    StudentHomeworkSubmissionRequest:
      type: object
      properties:
        content:
          type: string
          title: Ответ/комментарий студента
        files_to_upload:
          type: array
          items:
            type: string
            format: binary
          writeOnly: true
        homework_id:
          type: integer
          writeOnly: true
          title: Домашнее задание
      required:
      - homework_id
    StudentOverallPerformanceInGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Адрес электронной почты
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        patronymic:
          type: string
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
          title: Роль
        profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          readOnly: true
        average_grade_for_period:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        subject_performance_details:
          type: string
          readOnly: true
      required:
      - average_grade_for_period
      - email
      - id
      - profile
      - role
      - subject_performance_details
    StudyPeriod:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        academic_year:
          type: integer
          title: Учебный год
        academic_year_name:
          type: string
          readOnly: true
        name:
          type: string
          title: Название периода
          description: Например, 1-я Четверть, Осенний семестр
          maxLength: 100
        start_date:
          type: string
          format: date
          title: Дата начала
        end_date:
          type: string
          format: date
          title: Дата окончания
      required:
      - academic_year
      - academic_year_name
      - end_date
      - id
      - name
      - start_date
    StudyPeriodRequest:
      type: object
      properties:
        academic_year:
          type: integer
          title: Учебный год
        name:
          type: string
          minLength: 1
          title: Название периода
          description: Например, 1-я Четверть, Осенний семестр
          maxLength: 100
        start_date:
          type: string
          format: date
          title: Дата начала
        end_date:
          type: string
          format: date
          title: Дата окончания
      required:
      - academic_year
      - end_date
      - name
      - start_date
    Subject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название предмета
          maxLength: 200
        code:
          type: string
          nullable: true
          title: Код предмета
          maxLength: 20
        description:
          type: string
          title: Описание
        subject_type:
          type: integer
          nullable: true
          title: Тип предмета
        subject_type_name:
          type: string
          readOnly: true
          nullable: true
        lead_teachers_details:
          type: array
          items:
            $ref: '#/components/schemas/EduUser'
          readOnly: true
      required:
      - id
      - lead_teachers_details
      - name
      - subject_type_name
    SubjectMaterial:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        subject_details:
          allOf:
          - $ref: '#/components/schemas/Subject'
          readOnly: true
        student_group_details:
          allOf:
          - $ref: '#/components/schemas/StudentGroup'
          readOnly: true
          nullable: true
        title:
          type: string
          title: Название материала
          maxLength: 255
        description:
          type: string
          title: Описание
        uploaded_by_details:
          allOf:
          - $ref: '#/components/schemas/EduUser'
          readOnly: true
          nullable: true
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/SubjectMaterialAttachment'
          readOnly: true
      required:
      - attachments
      - id
      - student_group_details
      - subject_details
      - title
      - uploaded_at
      - uploaded_by_details
    SubjectMaterialAttachment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file_name:
          type: string
          readOnly: true
        file_url:
          type: string
          format: uri
          readOnly: true
        description:
          type: string
          title: Описание файла
          maxLength: 255
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - file_name
      - file_url
      - id
      - uploaded_at
    SubjectMaterialAttachmentRequest:
      type: object
      properties:
        description:
          type: string
          title: Описание файла
          maxLength: 255
    SubjectMaterialRequest:
      type: object
      properties:
        subject:
          type: integer
          writeOnly: true
          title: Предмет
        student_group:
          type: integer
          writeOnly: true
          nullable: true
          title: Учебная группа (если применимо)
        title:
          type: string
          minLength: 1
          title: Название материала
          maxLength: 255
        description:
          type: string
          title: Описание
        uploaded_by:
          type: integer
          writeOnly: true
          nullable: true
        files_to_upload:
          type: array
          items:
            type: string
            format: binary
          writeOnly: true
      required:
      - subject
      - title
    SubjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название предмета
          maxLength: 200
        code:
          type: string
          nullable: true
          title: Код предмета
          maxLength: 20
        description:
          type: string
          title: Описание
        subject_type:
          type: integer
          nullable: true
          title: Тип предмета
        lead_teachers:
          type: array
          items:
            type: integer
            writeOnly: true
            title: Основные преподаватели предмета
          writeOnly: true
          title: Основные преподаватели предмета
      required:
      - name
    SubjectType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название типа предмета
          maxLength: 100
        description:
          type: string
          title: Описание
      required:
      - id
      - name
    SubjectTypeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название типа предмета
          maxLength: 100
        description:
          type: string
          title: Описание
      required:
      - name
    SubmissionAttachment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file_url:
          type: string
          format: uri
          readOnly: true
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - file_url
      - id
      - uploaded_at
    SubmissionAttachmentRequest:
      type: object
      properties:
        submission:
          type: integer
          writeOnly: true
          title: Сдача ДЗ
        file:
          type: string
          format: binary
          writeOnly: true
          title: Файл
      required:
      - file
      - submission
    TeacherLoad:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        total_planned_hours:
          type: number
          format: double
          readOnly: true
          default: 0.0
        scheduled_lesson_count:
          type: integer
          readOnly: true
          default: 0
        total_scheduled_hours_float:
          type: number
          format: double
          readOnly: true
          default: 0.0
      required:
      - email
      - full_name
      - id
      - scheduled_lesson_count
      - total_planned_hours
      - total_scheduled_hours_float
    TeacherSubjectPerformance:
      type: object
      properties:
        teacher_id:
          type: integer
        teacher_name:
          type: string
        groups_data:
          type: array
          items:
            $ref: '#/components/schemas/GroupSubjectPerformanceStat'
          readOnly: true
      required:
      - groups_data
      - teacher_id
      - teacher_name
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    TypeEnum:
      enum:
      - LECTURE
      - PRACTICE
      - LAB
      - COMPUTER
      - SPORTS
      - ART
      - LIBRARY
      - MEETING
      - OTHER
      type: string
      description: |-
        * `LECTURE` - Лекционная
        * `PRACTICE` - Практическая
        * `LAB` - Лаборатория
        * `COMPUTER` - Компьютерный класс
        * `SPORTS` - Спортивный зал
        * `ART` - Творческая мастерская
        * `LIBRARY` - Библиотека
        * `MEETING` - Переговорная/Зал собраний
        * `OTHER` - Другое
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Адрес электронной почты
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        patronymic:
          type: string
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
          title: Роль
        profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          readOnly: true
        student_groups:
          type: string
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
          title: Активный
          description: Отметьте, если пользователь должен считаться активным. Уберите
            эту отметку вместо удаления учётной записи.
        is_role_confirmed:
          type: boolean
          readOnly: true
          title: Role confirmed
        date_joined:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
        is_staff:
          type: boolean
          readOnly: true
          title: Статус персонала
          description: Отметьте, если пользователь может входить в административную
            часть сайта.
        is_superuser:
          type: boolean
          readOnly: true
          title: Статус суперпользователя
          description: Указывает, что пользователь имеет все права без явного их назначения.
        parents:
          type: array
          items:
            type: integer
            title: Родители (для Студента)
          readOnly: true
          title: Родители (для Студента)
        children:
          type: array
          items:
            type: integer
          readOnly: true
        is_curator_of_any_group:
          type: boolean
          readOnly: true
        curated_groups_info:
          type: array
          items: {}
          readOnly: true
      required:
      - children
      - curated_groups_info
      - date_joined
      - email
      - id
      - is_active
      - is_curator_of_any_group
      - is_role_confirmed
      - is_staff
      - is_superuser
      - parents
      - profile
      - role
      - student_groups
    UserNotificationSettings:
      type: object
      properties:
        enable_schedule:
          type: boolean
          title: Расписание
        enable_messages:
          type: boolean
          title: Сообщения в чате
        enable_assignment_new:
          type: boolean
          title: Новые ДЗ
        enable_assignment_due:
          type: boolean
          title: Напоминания о сроках ДЗ
        enable_assignment_submitted:
          type: boolean
          title: Сдача ДЗ (для преподавателя)
        enable_assignment_graded:
          type: boolean
          title: Проверка/оценка ДЗ
        enable_grade_new:
          type: boolean
          title: Новые оценки
        enable_system:
          type: boolean
          title: Системные
    UserNotificationSettingsRequest:
      type: object
      properties:
        enable_schedule:
          type: boolean
          title: Расписание
        enable_messages:
          type: boolean
          title: Сообщения в чате
        enable_assignment_new:
          type: boolean
          title: Новые ДЗ
        enable_assignment_due:
          type: boolean
          title: Напоминания о сроках ДЗ
        enable_assignment_submitted:
          type: boolean
          title: Сдача ДЗ (для преподавателя)
        enable_assignment_graded:
          type: boolean
          title: Проверка/оценка ДЗ
        enable_grade_new:
          type: boolean
          title: Новые оценки
        enable_system:
          type: boolean
          title: Системные
    UserRegistration:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        patronymic:
          type: string
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: Роль
        used_invitation_code:
          type: boolean
          readOnly: true
          default: false
      required:
      - email
      - first_name
      - last_name
      - role
      - used_invitation_code
    UserRegistrationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Адрес электронной почты
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 1
        password2:
          type: string
          writeOnly: true
          minLength: 1
          title: Confirm password
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        patronymic:
          type: string
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: Роль
        invite_code:
          type: string
          writeOnly: true
          nullable: true
      required:
      - email
      - first_name
      - last_name
      - password
      - password2
      - role
    UserRequest:
      type: object
      properties:
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        patronymic:
          type: string
          maxLength: 150
        avatar:
          type: string
          format: binary
          writeOnly: true
          nullable: true
        phone_number:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 20
        bio:
          type: string
          writeOnly: true
          nullable: true
        date_of_birth:
          type: string
          format: date
          writeOnly: true
          nullable: true
        clear_avatar:
          type: boolean
          writeOnly: true
          default: false
        password:
          type: string
          writeOnly: true
          minLength: 1
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
