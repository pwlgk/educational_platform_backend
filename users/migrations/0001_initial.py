# Generated by Django 5.1.7 on 2025-05-10 10:03

import django.db.models.deletion
import django.utils.timezone
import users.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('role', models.CharField(choices=[('STUDENT', 'Студент'), ('TEACHER', 'Преподаватель'), ('PARENT', 'Родитель'), ('ADMIN', 'Администратор')], default='STUDENT', max_length=20, verbose_name='роль')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('patronymic', models.CharField(blank=True, max_length=150, verbose_name='patronymic')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_role_confirmed', models.BooleanField(default=False, verbose_name='role confirmed')),
                ('confirmation_token', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invited_users', to=settings.AUTH_USER_MODEL)),
                ('parents', models.ManyToManyField(blank=True, limit_choices_to={'role': 'PARENT'}, related_name='children', to=settings.AUTH_USER_MODEL, verbose_name='Родители (для Студента)')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
                ('avatar', models.ImageField(blank=True, help_text='User profile picture', null=True, upload_to=users.models.get_avatar_upload_path, verbose_name='аватар')),
                ('phone_number', models.CharField(blank=True, help_text='Contact phone number (optional)', max_length=20, verbose_name='номер телефона')),
                ('bio', models.TextField(blank=True, help_text='A short biography (optional)', verbose_name='о себе')),
                ('date_of_birth', models.DateField(blank=True, help_text='Date of birth (optional)', null=True, verbose_name='дата рождения')),
            ],
            options={
                'verbose_name': 'профиль',
                'verbose_name_plural': 'профили',
            },
        ),
        migrations.CreateModel(
            name='InvitationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=uuid.uuid4, max_length=50, unique=True, verbose_name='код')),
                ('role', models.CharField(choices=[('STUDENT', 'Студент'), ('TEACHER', 'Преподаватель'), ('PARENT', 'Родитель'), ('ADMIN', 'Администратор')], max_length=20, verbose_name='назначенная роль')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='истекает')),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['TEACHER', 'ADMIN']}, on_delete=django.db.models.deletion.CASCADE, related_name='generated_invitations', to=settings.AUTH_USER_MODEL)),
                ('used_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='used_invitation', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'код приглашения',
                'verbose_name_plural': 'коды приглашения',
            },
        ),
    ]
